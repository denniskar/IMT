[{"/home/elvis/Job/IMT/src/index.js":"1","/home/elvis/Job/IMT/src/serviceWorker.js":"2","/home/elvis/Job/IMT/src/components/App.js":"3","/home/elvis/Job/IMT/src/context/LayoutContext.js":"4","/home/elvis/Job/IMT/src/context/UserContext.js":"5","/home/elvis/Job/IMT/src/themes/index.js":"6","/home/elvis/Job/IMT/src/services/auth.service.js":"7","/home/elvis/Job/IMT/src/themes/default.js":"8","/home/elvis/Job/IMT/src/components/Layout/Layout.js":"9","/home/elvis/Job/IMT/src/pages/error/Error.js":"10","/home/elvis/Job/IMT/src/pages/login/Login.js":"11","/home/elvis/Job/IMT/src/pages/login/styles.js":"12","/home/elvis/Job/IMT/src/services/user.service.js":"13","/home/elvis/Job/IMT/src/services/auth-header.js":"14","/home/elvis/Job/IMT/src/pages/error/styles.js":"15","/home/elvis/Job/IMT/src/components/Layout/styles.js":"16","/home/elvis/Job/IMT/src/pages/charts/Charts.js":"17","/home/elvis/Job/IMT/src/pages/icons/Icons.js":"18","/home/elvis/Job/IMT/src/pages/tables/Tables.js":"19","/home/elvis/Job/IMT/src/pages/maps/Maps.js":"20","/home/elvis/Job/IMT/src/pages/notifications/Notifications.js":"21","/home/elvis/Job/IMT/src/pages/typography/Typography.js":"22","/home/elvis/Job/IMT/src/pages/dashboard/Dashboard.js":"23","/home/elvis/Job/IMT/src/components/Sidebar/Sidebar.js":"24","/home/elvis/Job/IMT/src/components/Header/Header.js":"25","/home/elvis/Job/IMT/src/pages/charts/styles.js":"26","/home/elvis/Job/IMT/src/components/Header/styles.js":"27","/home/elvis/Job/IMT/src/components/Sidebar/styles.js":"28","/home/elvis/Job/IMT/src/components/Sidebar/components/Dot.js":"29","/home/elvis/Job/IMT/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"30","/home/elvis/Job/IMT/src/pages/dashboard/components/BigStat/BigStat.js":"31","/home/elvis/Job/IMT/src/pages/dashboard/components/Table/Table.js":"32","/home/elvis/Job/IMT/src/pages/dashboard/mock.js":"33","/home/elvis/Job/IMT/src/pages/dashboard/styles.js":"34","/home/elvis/Job/IMT/src/components/UserAvatar/UserAvatar.js":"35","/home/elvis/Job/IMT/src/components/Notification/Notification.js":"36","/home/elvis/Job/IMT/src/components/PageTitle/PageTitle.js":"37","/home/elvis/Job/IMT/src/pages/typography/styles.js":"38","/home/elvis/Job/IMT/src/components/Widget/Widget.js":"39","/home/elvis/Job/IMT/src/components/Wrappers/Wrappers.js":"40","/home/elvis/Job/IMT/src/pages/notifications/styles.js":"41","/home/elvis/Job/IMT/src/pages/maps/styles.js":"42","/home/elvis/Job/IMT/src/components/Sidebar/components/SidebarLink/styles.js":"43","/home/elvis/Job/IMT/src/pages/dashboard/components/BigStat/styles.js":"44","/home/elvis/Job/IMT/src/components/UserAvatar/styles.js":"45","/home/elvis/Job/IMT/src/components/Notification/styles.js":"46","/home/elvis/Job/IMT/src/components/PageTitle/styles.js":"47","/home/elvis/Job/IMT/src/components/Widget/styles.js":"48"},{"size":869,"mtime":1622480133231,"results":"49","hashOfConfig":"50"},{"size":4948,"mtime":1622480133231,"results":"51","hashOfConfig":"50"},{"size":1729,"mtime":1622621883593,"results":"52","hashOfConfig":"50"},{"size":1392,"mtime":1622480133231,"results":"53","hashOfConfig":"50"},{"size":2059,"mtime":1622480133231,"results":"54","hashOfConfig":"50"},{"size":502,"mtime":1622480133231,"results":"55","hashOfConfig":"50"},{"size":766,"mtime":1622480133231,"results":"56","hashOfConfig":"50"},{"size":2987,"mtime":1622480133231,"results":"57","hashOfConfig":"50"},{"size":3756,"mtime":1622480133231,"results":"58","hashOfConfig":"50"},{"size":1571,"mtime":1622480133231,"results":"59","hashOfConfig":"50"},{"size":10518,"mtime":1622480133231,"results":"60","hashOfConfig":"50"},{"size":3135,"mtime":1622480133231,"results":"61","hashOfConfig":"50"},{"size":2033,"mtime":1622480133231,"results":"62","hashOfConfig":"50"},{"size":344,"mtime":1622480133231,"results":"63","hashOfConfig":"50"},{"size":1334,"mtime":1622480133231,"results":"64","hashOfConfig":"50"},{"size":680,"mtime":1622480133231,"results":"65","hashOfConfig":"50"},{"size":8707,"mtime":1622480133231,"results":"66","hashOfConfig":"50"},{"size":3004,"mtime":1622480133231,"results":"67","hashOfConfig":"50"},{"size":2686,"mtime":1622480133231,"results":"68","hashOfConfig":"50"},{"size":8481,"mtime":1622480133231,"results":"69","hashOfConfig":"50"},{"size":5838,"mtime":1622480133231,"results":"70","hashOfConfig":"50"},{"size":20324,"mtime":1622480133231,"results":"71","hashOfConfig":"50"},{"size":2936,"mtime":1622480133231,"results":"72","hashOfConfig":"50"},{"size":5962,"mtime":1622480133231,"results":"73","hashOfConfig":"50"},{"size":7185,"mtime":1622480133227,"results":"74","hashOfConfig":"50"},{"size":1151,"mtime":1622480133231,"results":"75","hashOfConfig":"50"},{"size":3893,"mtime":1622480133231,"results":"76","hashOfConfig":"50"},{"size":1304,"mtime":1622480133231,"results":"77","hashOfConfig":"50"},{"size":862,"mtime":1622480133231,"results":"78","hashOfConfig":"50"},{"size":4411,"mtime":1622480133231,"results":"79","hashOfConfig":"50"},{"size":4039,"mtime":1622480133231,"results":"80","hashOfConfig":"50"},{"size":1383,"mtime":1622480133231,"results":"81","hashOfConfig":"50"},{"size":3693,"mtime":1622480133231,"results":"82","hashOfConfig":"50"},{"size":2870,"mtime":1622480133231,"results":"83","hashOfConfig":"50"},{"size":593,"mtime":1622480133231,"results":"84","hashOfConfig":"50"},{"size":3296,"mtime":1622480133231,"results":"85","hashOfConfig":"50"},{"size":427,"mtime":1622480133231,"results":"86","hashOfConfig":"50"},{"size":1151,"mtime":1622480133231,"results":"87","hashOfConfig":"50"},{"size":2485,"mtime":1622480133231,"results":"88","hashOfConfig":"50"},{"size":3790,"mtime":1622480133231,"results":"89","hashOfConfig":"50"},{"size":1037,"mtime":1622480133231,"results":"90","hashOfConfig":"50"},{"size":1151,"mtime":1622480133231,"results":"91","hashOfConfig":"50"},{"size":1412,"mtime":1622480133231,"results":"92","hashOfConfig":"50"},{"size":1027,"mtime":1622480133231,"results":"93","hashOfConfig":"50"},{"size":276,"mtime":1622480133231,"results":"94","hashOfConfig":"50"},{"size":993,"mtime":1622480133231,"results":"95","hashOfConfig":"50"},{"size":462,"mtime":1622480133231,"results":"96","hashOfConfig":"50"},{"size":969,"mtime":1622480133231,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"nmhzh0",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"/home/elvis/Job/IMT/src/index.js",[],["206","207"],"/home/elvis/Job/IMT/src/serviceWorker.js",[],"/home/elvis/Job/IMT/src/components/App.js",[],"/home/elvis/Job/IMT/src/context/LayoutContext.js",[],"/home/elvis/Job/IMT/src/context/UserContext.js",[],"/home/elvis/Job/IMT/src/themes/index.js",[],"/home/elvis/Job/IMT/src/services/auth.service.js",["208"],"import axios from \"axios\";\n\nconst API_URL = \"api/qsend/v1\";\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"/auth/token\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.headerValue) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      console.log(response.data);\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n};\n","/home/elvis/Job/IMT/src/themes/default.js",[],"/home/elvis/Job/IMT/src/components/Layout/Layout.js",[],"/home/elvis/Job/IMT/src/pages/error/Error.js",[],"/home/elvis/Job/IMT/src/pages/login/Login.js",["209","210","211","212","213","214"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport authHeader from \"../../services/auth-header\";\nimport userService from \"../../services/user.service\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\nimport axios from \"axios\";\nimport { mdiReload } from \"@mdi/js\";\n\ntoast.configure();\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n\n  const [courntryCode, setCountryCode] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [sName, setSname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n\n  const Reload = () => {\n    setCountryCode(\"\");\n    setPhoneNumber(\"\");\n    setEmail(\"\");\n    setFirstName(\"\");\n    setSname(\"\");\n    setPassword(\"\");\n    setCountry(\"\");\n    setCode(\"\");\n    activeTabId(0);\n  };\n\n  useEffect(() => {\n    userService.country().then((res) => {\n      const countries = res.data.map((country) => ({\n        value: country.countryCode,\n        label: country.countryName,\n        phoneCode: country.phonePrefix,\n      }));\n      console.log(countries);\n      setCountryCode(countries);\n    });\n  }, []);\n\n  const phoneDetails = (value) => {\n    const co = value.value;\n    setCountry(co);\n    setPhoneNumber(\"+\" + value.phoneCode);\n    setCode(value.label);\n  };\n\n  const register = () => {\n    const formData = {\n      firstName: firstName,\n      otherName: \"\",\n      lastName: sName,\n      email: email,\n      phoneNumber: {\n        phone: phoneNumber,\n        countryCode: country,\n      },\n      password: password,\n      country: code,\n    };\n\n    console.log(formData);\n\n    axios\n      .post(\"/api/qsend/v1/users/self-register\", formData)\n      .then(function (res) {\n        if (res.data.status === 0) {\n          // Swal.fire(\n          //     '',\n          //     res.data.message,\n          //     'success'\n          // )\n          toast.success(\n            \" Hi,you have been registered Successfully,please Login\",\n            {\n              position: toast.POSITION.TOP_CENTER,\n            },\n          );\n\n          Reload();\n        } else {\n          // Swal.fire(\n          //     '',\n          //     res.data.message,\n          //     'error'\n          // )\n          toast.error(res.data.message, {\n            position: toast.POSITION.TOP_CENTER,\n          });\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>Qsend System</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                welcome to Qsend\n              </Typography>\n\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <div className={classes.formDivider} />\n              </div>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={(e) => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={(e) => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    Login\n                  </Button>\n                )}\n                <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.forgetButton}\n                >\n                  Forget Password\n                </Button>\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h5\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h6\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"first Name\"\n                type=\"text\"\n                fullWidth\n              />\n\n              <TextField\n                value={sName}\n                onChange={(e) => setSname(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Second Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <Select\n                onChange={phoneDetails}\n                margin=\"normal\"\n                placeholder=\"Select Country\"\n                type=\"text\"\n                fullWidth\n                options={courntryCode}\n              />\n\n              <TextField\n                value={phoneNumber}\n                onChange={(e) => setPhoneNumber(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Phone Number\"\n                type=\"text\"\n                fullWidth\n              />\n\n              <TextField\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() => register()}\n                    disabled={\n                      password.length === 0 ||\n                      email.length === 0 ||\n                      sName.length === 0 ||\n                      firstName.length === 0 ||\n                      courntryCode.length === 0 ||\n                      phoneNumber.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n            </React.Fragment>\n          )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n          © {new Date().getFullYear()}{\" \"}\n          <a\n            style={{ textDecoration: \"none\", color: \"inherit\" }}\n            href=\"https://lanstar.co.ke\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            lanster\n          </a>\n          , All rights reserved.\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/home/elvis/Job/IMT/src/pages/login/styles.js",[],"/home/elvis/Job/IMT/src/services/user.service.js",["215"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"api/qsend/v1\";\n\nconst getPublicContent = () => {\n  return axios.get(API_URL + \"all\");\n};\n\nconst getUserBoard = () => {\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\n};\n\nconst getModeratorBoard = () => {\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\n};\n\nconst getAdminBoard = () => {\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\n};\n\nconst payment = () => {\n  return axios.get(API_URL + \"/transactions\", { headers: authHeader() });\n};\n\nconst client = () => {\n  return axios.get(API_URL + \"/clients\", { headers: authHeader() });\n};\n\nconst schemes = (id) => {\n  return axios.get(API_URL + \"/clients/schemes/\" + id, {\n    headers: authHeader(),\n  });\n};\n\nconst loans = (id) => {\n  console.log(id);\n  console.log(API_URL + \"/clients/loanTypes\" + id);\n  return axios.get(API_URL + \"/clients/loanTypes/\" + id, {\n    headers: authHeader(),\n  });\n};\n\nconst states = (code) => {\n  return axios.get(API_URL + \"/country/\" + code + \"/states\", {\n    headers: authHeader(),\n  });\n};\n\nconst country = () => {\n  return axios.get(API_URL + \"/country\");\n};\n\nconst currencyPair = () => {\n  return axios.get(API_URL + \"/currency/pair\", { headers: authHeader() });\n};\nconst exchangeRate = () => {\n  return axios.get(API_URL + \"/currency/rates\", { headers: authHeader() });\n};\n\nconst transaction = () => {\n  return axios.get(API_URL + \"/transactions\", { headers: authHeader() });\n};\nconst users = () => {\n  return axios.get(API_URL + \"/users\", { headers: authHeader() });\n};\n\nconst clients = () => {\n  return axios.get(API_URL + \" /clients\", { headers: authHeader() });\n};\n\nconst userTransactions = () => {\n  return axios.get(API_URL + \"\", { headers: authHeader() });\n};\nexport default {\n  getPublicContent,\n  getUserBoard,\n  getModeratorBoard,\n  getAdminBoard,\n  payment,\n  client,\n  loans,\n  schemes,\n  states,\n  country,\n  currencyPair,\n  transaction,\n  exchangeRate,\n  users,\n  clients,\n  userTransactions,\n};\n","/home/elvis/Job/IMT/src/services/auth-header.js",[],"/home/elvis/Job/IMT/src/pages/error/styles.js",[],"/home/elvis/Job/IMT/src/components/Layout/styles.js",[],"/home/elvis/Job/IMT/src/pages/charts/Charts.js",["216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React, { useState, useEffect } from \"react\";\nimport { Checkbox, Grid, Paper, TextField } from \"@material-ui/core\";\nimport UserService from \"../../services/user.service\";\nimport Card from \"react-credit-cards\";\nimport \"react-credit-cards/es/styles-compiled.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// styles\nimport useStyles from \"./styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport authHeader from \"../../services/auth-header\";\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Select from \"react-select\";\nimport userService from \"../../services/user.service\";\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { mdiReload, mdiVideoMinusOutline } from \"@mdi/js\";\nimport axios from \"axios\";\nimport MUIDataTable from \"mui-datatables\";\nexport default function Charts() {\n  const [clientData, setClientData] = useState([]);\n  useEffect(() => {\n    UserService.client().then((res) => {\n      setClientData(res.data);\n    });\n  }, []);\n\n  const data = [\n    {\n      clientId: 37,\n      clientName: \"Test Client\",\n      email: \"test@lansta.co.ke\",\n      address: \"tets\",\n      businessNo: \"\",\n      phoneNumber: \"\",\n      dateCreated: \"2021-04-16T13:02:37+03:00\",\n      lastModified: \"2021-04-16T13:09:14+03:00\",\n    },\n  ];\n\n  const columns = [\n    { name: \"clientId\", label: \" client ID\" },\n    { name: \"clientName\", label: \"Client Name\" },\n    { name: \"email\", label: \" Email\" },\n    { name: \"phoneNumber\", label: \"Pnumber\" },\n    { name: \"businessNo\", label: \"Business No\" },\n    //{ name: \"lastModified\", label: \"last MOdified\" },\n  ];\n\n  //const[singleCurrency,setSingleCurrrency]=useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [clientId, setClientId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [roles, setRoles] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [registration, setRegistration] = useState(\"\");\n\n  const reload = () => {\n    setName(\"\");\n    setClientId(\"\");\n    setAddress(\"\");\n    setPhone(\"\");\n    setCode(\"\");\n    setEmail(\"\");\n    setCountryCode(\"\");\n    setRegistration(\"\");\n  };\n\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  var classes = useStyles();\n\n  const options = [\n    { value: \"1\", label: \"USER\" },\n    { value: \"2\", label: \"ADMIN\" },\n    { value: \"3\", label: \"CLIENTADMIN\" },\n    { value: \"4\", label: \"CLIENTUSER\" },\n  ];\n\n  const selectState = (value) => {\n    console.log(value);\n    setCountry(value.label);\n    setCode(value.value);\n    setPhone(\"+\" + value.phoneCode);\n  };\n\n  const handleRoles = (values) => {\n    console.log(values.label);\n    setRoles(values.label);\n  };\n\n  useEffect(() => {\n    userService.country().then((res) => {\n      const countries = res.data.map((country) => ({\n        value: country.countryCode,\n        label: country.countryName,\n        phoneCode: country.phonePrefix,\n      }));\n      setCountryCode(countries);\n    });\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = {\n      clientName: name,\n      clientId: clientId,\n      address: address,\n      businessRegistrationNo: registration,\n      phone: {\n        phone: phone,\n        countryCode: code,\n      },\n      email: email,\n      country: \"Kenya\",\n    };\n\n    console.log(formData);\n    axios\n      .post(\"/api/qsend/v1/clients\", formData, { headers: authHeader() })\n      .then(function (res) {\n        if (res.data.status === 0) {\n          // Swal.fire(\n          //     '',\n          //     res.data.message,\n          //     'success'\n          // )\n          toast.success(res.data.message, {\n            position: toast.POSITION.TOP_CENTER,\n          });\n          reload();\n          // reset for\n        } else {\n          // Swal.fire(\n          //     '',\n          //     res.data.message,\n          //     'error'\n          // )\n          toast.error(res.data.message, {\n            position: toast.POSITION.TOP_CENTER,\n          });\n        }\n      });\n\n    console.log(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"Client Details\" disableWidgetMenu>\n            <div className={classes.PaymentBar}>\n              <Paper className={classes.layout}>\n                <Grid className={classes.paper} container spacing={2}>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"client Name\"\n                      name=\"firstname\"\n                      variant=\"outlined\"\n                      value={name}\n                      margin=\"normal\"\n                      onChange={(e) => setName(e.target.value)}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"client Id \"\n                      name=\"city\"\n                      variant=\"outlined\"\n                      value={clientId}\n                      onChange={(e) => setClientId(e.target.value)}\n                      margin=\"normal\"\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Business Registration No\"\n                      name=\"city\"\n                      variant=\"outlined\"\n                      value={registration}\n                      onChange={(e) => setRegistration(e.target.value)}\n                      margin=\"normal\"\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <Select\n                      label=\"Country\"\n                      placeholder=\"Country\"\n                      options={countryCode}\n                      onChange={selectState}\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"phoneNumber \"\n                      variant=\"outlined\"\n                      value={phone}\n                      margin=\"normal\"\n                      onChange={(e) => setPhone(e.target.value)}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Email \"\n                      name=\"city\"\n                      variant=\"outlined\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      margin=\"normal\"\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Address \"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={address}\n                      onChange={(e) => setAddress(e.target.value)}\n                      required\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item xs={6} sm={6}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    type=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Paper>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"clients\" disableWidgetMenu>\n            <div className={classes.PaymentBar}>\n              <MUIDataTable\n                title=\"Transactions\"\n                data={clientData}\n                columns={columns}\n                options={{\n                  filterType: \"checkbox\",\n                  rowsPerPage: 6,\n                }}\n              />\n            </div>\n          </Widget>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","/home/elvis/Job/IMT/src/pages/icons/Icons.js",["230","231","232","233","234"],"import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Table from \"../dashboard/components/Table/Table\";\n\n// data\nimport mock from \"../dashboard/mock\";\nimport userService from \"../../services/user.service\";\n\nexport default function Icons() {\n  const [transactionData, setTransaction] = useState([]);\n\n  useEffect(() => {\n    userService.transaction().then((res) => {\n      setTransaction(res.data.data);\n    });\n  }, []);\n\n  const data = [\n    {\n      id: 4,\n      transactionReference: \"5622808806225903\",\n      payer: {\n        name: \"Agnes Kisaya\",\n        phone: \"254 704 034231\",\n        email: \"test@gmail.com\",\n        country: \"USA\",\n        creditCardNumber: \"***************1890\",\n      },\n      beneficiary: {\n        name: \"Andrew KISANGA\",\n        phone: \"254 796 774343\",\n      },\n      currency: {\n        currency: \"USD\",\n        exchangeRate: 107.83,\n        currencyPair: \"USD - KES\",\n      },\n      amount: 10.0,\n      purposeOfFunds: \"scheme contribution\",\n      transactionType: \"LOAN\",\n      transactionTypeCode: \"nn\",\n      status: \"SUCCESS\",\n      comment: \"Paid Out\",\n      dateTransacted: \"2021-04-20 18:35:05\",\n      client: \"Test Client\",\n    },\n  ];\n\n  const modifiedData = transactionData.map((datas) => ({\n    amount: datas.amount,\n    payer: datas.payer.name,\n    beneficiary: datas.beneficiary.name,\n    beneficiaryPhone: datas.beneficiary.phone,\n    currencyPair: datas.currency.currencyPair,\n    transactionType: datas.transactionType,\n    transactionTypeCode: datas.transactionTypeCode,\n    date: datas.dateTransacted,\n    status: datas.status,\n    client: datas.client,\n    purposeOfFunds: datas.purposeOfFunds,\n    comment: datas.comment,\n  }));\n\n  const columns = [\n    { name: \"date\", label: \" Date\" },\n    { name: \"payer\", label: \"Payer\" },\n    { name: \"beneficiary\", label: \"Beneficiary Name\" },\n    { name: \"beneficiaryPhone\", label: \"BeneficiaryPhone\" },\n    { name: \"amount\", label: \"Amount\" },\n    { name: \"currencyPair\", label: \"Currency Pair\" },\n    { name: \"client\", label: \"client\" },\n    { name: \"transactionType\", label: \"Trans Type\" },\n    { name: \"transactionTypeCode\", label: \"trs code\" },\n    { name: \"status\", label: \"Status\" },\n    { name: \"comment\", label: \"comment\" },\n  ];\n\n  const useStyles = makeStyles((theme) => ({\n    tableOverflow: {\n      overflow: \"auto\",\n    },\n  }));\n\n  const classes = useStyles();\n  return (\n    <>\n      <PageTitle title=\"Transactions Table\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <MUIDataTable\n            title=\"Transactions\"\n            data={modifiedData}\n            columns={columns}\n            options={{\n              filterType: \"checkbox\",\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/home/elvis/Job/IMT/src/pages/tables/Tables.js",["235","236","237","238"],"import React, { useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Table from \"../dashboard/components/Table/Table\";\n\n// data\nimport mock from \"../dashboard/mock\";\n\nconst data = [\n  {\n    id: 4,\n    transactionReference: \"5622808806225903\",\n    payer: {\n      name: \"Agnes Kisaya\",\n      phone: \"254 704 034231\",\n      email: \"test@gmail.com\",\n      country: \"USA\",\n      creditCardNumber: \"***************1890\",\n    },\n    beneficiary: {\n      name: \"Andrew KISANGA\",\n      phone: \"254 796 774343\",\n    },\n    currency: {\n      currency: \"USD\",\n      exchangeRate: 107.83,\n      currencyPair: \"USD - KES\",\n    },\n    amount: 10.0,\n    purposeOfFunds: \"scheme contribution\",\n    transactionType: \"LOAN\",\n    transactionTypeCode: \"nn\",\n    status: \"SUCCESS\",\n    comment: \"Paid Out\",\n    dateTransacted: \"2021-04-20 18:35:05\",\n    client: \"Test Client\",\n  },\n];\n\nconst modifiedData = data.map((datas) => ({\n  amount: datas.amount,\n  payer: datas.payer.name,\n  beneficiary: datas.beneficiary.name,\n  beneficiaryPhone: datas.beneficiary.phone,\n  currencyPair: datas.currency.currencyPair,\n  transactionType: datas.transactionType,\n  transactionTypeCode: datas.transactionTypeCode,\n  date: datas.dateTransacted,\n  status: datas.status,\n  client: datas.client,\n  purposeOfFunds: datas.purposeOfFunds,\n  comment: datas.comment,\n}));\n\nconst columns = [\n  { name: \"date\", label: \" Date\" },\n  { name: \"payer\", label: \"Payer\" },\n  { name: \"beneficiary\", label: \"Beneficiary Name\" },\n  { name: \"beneficiaryPhone\", label: \"BeneficiaryPhone\" },\n  { name: \"amount\", label: \"Amount\" },\n  { name: \"currencyPair\", label: \"Currency Pair\" },\n  { name: \"client\", label: \"client\" },\n  { name: \"transactionType\", label: \"Trans Type\" },\n  { name: \"transactionTypeCode\", label: \"trs code\" },\n  { name: \"status\", label: \"Status\" },\n  { name: \"comment\", label: \"comment\" },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  tableOverflow: {\n    overflow: \"auto\",\n  },\n}));\n\nexport default function Tables() {\n  useEffect(() => {\n    console.log(modifiedData);\n  }, []);\n\n  const classes = useStyles();\n  return (\n    <>\n      <PageTitle title=\"Transactions Table\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <MUIDataTable\n            title=\"Transactions\"\n            data={modifiedData}\n            columns={columns}\n            options={{\n              filterType: \"checkbox\",\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/home/elvis/Job/IMT/src/pages/maps/Maps.js",["239","240","241","242","243","244","245","246","247"],"import React, { useState, useEffect } from \"react\";\nimport { Checkbox, Grid, Paper, TextField } from \"@material-ui/core\";\nimport UserService from \"../../services/user.service\";\nimport Card from \"react-credit-cards\";\nimport \"react-credit-cards/es/styles-compiled.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// styles\nimport useStyles from \"./styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport authHeader from \"../../services/auth-header\";\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Select from \"react-select\";\nimport userService from \"../../services/user.service\";\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { mdiVideoMinusOutline } from \"@mdi/js\";\nimport axios from \"axios\";\nimport MUIDataTable from \"mui-datatables\";\nexport default function TypographyPage() {\n  //const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [userData, setUserData] = useState([]);\n  useEffect(() => {\n    userService.users().then((res) => {\n      console.log(res.data);\n      setUserData(res.data);\n    });\n  }, []);\n  const data = [\n    {\n      status: \"Active\",\n      phoneNumber: \"254704034231\",\n      roles: {\n        role: \"USER\",\n        privileges: [],\n      },\n      email: \"test1@lanstar.co.ke\",\n      dateCreated: \"2021-04-16 11:57:03\",\n      firstName: \"Test\",\n      otherName: \"\",\n      lastName: \"Test\",\n      id: 6,\n      country: \"Kenya\",\n    },\n  ];\n\n  const modifiedData = userData.map((datas) => ({\n    firstName: datas.firstName,\n    lastName: datas.lastName,\n    roles: datas.roles.role,\n    email: datas.email,\n    country: datas.country,\n    date: datas.dateCreated,\n    status: datas.status,\n    phoneNumber: datas.phoneNumber,\n  }));\n\n  const columns = [\n    { name: \"firstName\", label: \" fName\" },\n    { name: \"lastName\", label: \"LName\" },\n    { name: \"roles\", label: \" Role\" },\n    { name: \"phoneNumber\", label: \"Pnumber\" },\n    { name: \"country\", label: \" country\" },\n    { name: \"status\", label: \"status\" },\n  ];\n\n  //const[singleCurrency,setSingleCurrrency]=useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [sname, setSecond] = useState(\"\");\n  const [passwordi, setPasswordi] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [roles, setRoles] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  var classes = useStyles();\n\n  const options = [\n    { value: \"1\", label: \"USER\" },\n    { value: \"2\", label: \"ADMIN\" },\n    { value: \"3\", label: \"CLIENTADMIN\" },\n    { value: \"4\", label: \"CLIENTUSER\" },\n  ];\n\n  const selectState = (value) => {\n    console.log(value);\n    setCountry(value.label);\n    setCode(value.value);\n    setPhone(\"+\" + value.phoneCode);\n  };\n\n  const handleRoles = (values) => {\n    console.log(values.label);\n    setRoles(values.label);\n  };\n\n  useEffect(() => {\n    userService.country().then((res) => {\n      const countries = res.data.map((country) => ({\n        value: country.countryCode,\n        label: country.countryName,\n        phoneCode: country.phonePrefix,\n      }));\n      setCountryCode(countries);\n    });\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = {\n      firstName: name,\n      otherName: \"\",\n      lastName: sname,\n      email: email,\n      phoneNumber: {\n        phone: phone,\n        countryCode: code,\n      },\n      password: passwordi,\n      country: country,\n      role: roles,\n    };\n\n    console.log(formData);\n    axios\n      .post(\"/api/qsend/v1/users\", formData, { headers: authHeader() })\n      .then(function (res) {\n        if (res.data.status === 0) {\n          // Swal.fire(\n          //     '',\n          //     res.data.message,\n          //     'success'\n          // )\n          toast.success(res.data.status, {\n            position: toast.POSITION.TOP_CENTER,\n          });\n          // reset for\n        } else {\n          // Swal.fire(\n          //     '',\n          //     res.data.message,\n          //     'error'\n          // )\n          toast.error(res.data.message, {\n            position: toast.POSITION.TOP_CENTER,\n          });\n        }\n      });\n\n    console.log(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"User Details\" disableWidgetMenu>\n            <div className={classes.PaymentBar}>\n              <Paper className={classes.layout}>\n                <Grid className={classes.paper} container spacing={2}>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"First Name\"\n                      name=\"firstname\"\n                      variant=\"outlined\"\n                      value={name}\n                      margin=\"normal\"\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Second Name \"\n                      name=\"city\"\n                      variant=\"outlined\"\n                      value={sname}\n                      onChange={(e) => setSecond(e.target.value)}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <Select\n                      label=\"Country\"\n                      placeholder=\"Country\"\n                      options={countryCode}\n                      onChange={selectState}\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <Select\n                      fullWidth\n                      placeholder=\"role\"\n                      label=\" select States\"\n                      options={options}\n                      onChange={handleRoles}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"phoneNumber \"\n                      variant=\"outlined\"\n                      value={phone}\n                      margin=\"normal\"\n                      onChange={(e) => setPhone(e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Email \"\n                      name=\"city\"\n                      variant=\"outlined\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"password \"\n                      type=\"password\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={passwordi}\n                      onChange={(e) => setPasswordi(e.target.value)}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item xs={6} sm={6}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    type=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Paper>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"users  tables\" disableWidgetMenu>\n            <div className={classes.PaymentBar}>\n              <MUIDataTable\n                title=\"Transactions\"\n                data={modifiedData}\n                columns={columns}\n                options={{\n                  filterType: \"checkbox\",\n                  rowsPerPage: 6,\n                }}\n              />\n            </div>\n          </Widget>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","/home/elvis/Job/IMT/src/pages/notifications/Notifications.js",[],"/home/elvis/Job/IMT/src/pages/typography/Typography.js",["248","249","250","251","252","253","254","255","256","257","258","259","260","261"],"import React, { useState, useEffect } from \"react\";\nimport { Checkbox, Grid, Paper, TextField } from \"@material-ui/core\";\nimport UserService from \"../../services/user.service\";\nimport Card from \"react-credit-cards\";\nimport \"react-credit-cards/es/styles-compiled.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// styles\nimport useStyles from \"./styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport authHeader from \"../../services/auth-header\";\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Select from \"react-select\";\nimport userService from \"../../services/user.service\";\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { mdiVideoMinusOutline } from \"@mdi/js\";\nimport axios from \"axios\";\n\nexport default function TypographyPage() {\n  const [client, setClient] = useState(\"\");\n  const [storeValue, SetStoreValue] = useState(\"\");\n  const [finalOption, setFinalOption] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [unitedstates, SetUnitedStates] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [storePair, setStorePair] = useState(\"\");\n  const [afterExchage, setAfterExchane] = useState(\"\");\n  const [phonePrefix, setPhonePrefix] = useState(\"\");\n  const [currencyLabel, setCurrencyLabel] = useState(\"\");\n  const [currencyLabel1, setCurrencyLabel2] = useState(\"\");\n  const [showScheduled, setShowScheduled] = useState(false);\n\n  ///submit values\n  const [email1, setEmail1] = useState(\"\");\n  const [email2, setEmail2] = useState(\"\");\n  const [address1, setAddress1] = useState(\"\");\n  const [adress2, setAddress2] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [bFirstname, setBfirstName] = useState(\"\");\n  const [bSecondName, setBsecondname] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [ftransactionTypeCode, setfTransactionTypeCode] = useState(\"\");\n  const [prefix, setPprefix] = useState(\"\");\n  const [code1, setCode1] = useState(\"\");\n  const [code2, setCode2] = useState(\"\");\n\n  //modified select values\n  const [schemess, setSchemes] = useState(\"\");\n  const [ustates, setUStates] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [currencyPair, setCurrencyPair] = useState(\"\");\n  const [converted, setConverted] = useState(\"\");\n  const [country2, setcountry2] = useState(\"\");\n  //const[singleCurrency,setSingleCurrrency]=useState(\"\");\n\n  toast.configure();\n\n  const reload = () => {\n    setEmail1(\"\");\n    setEmail2(\"\");\n    setAddress1(\"\");\n    setAddress2(\"\");\n    setAmount(\"\");\n    setBfirstName(\"\");\n    setBsecondname(\"\");\n    setDescription(\"\");\n    setfTransactionTypeCode(\"\");\n    setPprefix(\"\");\n    setCountry(\"\");\n    setConverted(\"\");\n    setcountry2(\"\");\n  };\n\n  useEffect(() => {\n    UserService.client().then((response) => {\n      const clients = response.data.map((client) => ({\n        value: client.clientId,\n        label: client.clientName,\n      }));\n\n      setClient(clients);\n    });\n  }, []);\n\n  var classes = useStyles();\n\n  const [cvc, setCvc] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [focus, setFocus] = useState(\"\");\n  const [secondName, setSecondNmae] = useState(\"\");\n\n  const options = [\n    { value: \"1\", label: \"FOSA\" },\n    { value: \"2\", label: \"LOAN\" },\n    { value: \"3\", label: \"SCHEME\" },\n  ];\n\n  const handleChange = (value) => {\n    SetStoreValue(value.value);\n  };\n\n  const fetchSchemes = (value) => {\n    const code = value.label;\n    setfTransactionTypeCode(code);\n    if (value.value == \"3\") {\n      userService.schemes(storeValue).then((response) => {\n        const schemes = response.data.map((scheme) => ({\n          value: scheme.code,\n          label: scheme.name,\n        }));\n\n        setFinalOption(schemes);\n      });\n    } else if (value.value == \"2\") {\n      userService.loans(storeValue).then((response) => {\n        const loans = response.data.map((loan) => ({\n          value: loan.code,\n          label: loan.name,\n        }));\n\n        setFinalOption(loans);\n      });\n    } else if (value.value === null) {\n      window.alert(\"please select the client \");\n    } else {\n      return 0;\n    }\n  };\n\n  const selectState = (value) => {\n    console.log(value);\n    console.log(value.value);\n    setCountry(value.value);\n    setCode1(value.label);\n\n    setPhonePrefix(\"+\" + value.phoneCode);\n\n    userService.states(value.value).then((res) => {\n      const states = res.data.map((state) => ({\n        value: state.code,\n        label: state.state,\n      }));\n\n      console.log(states);\n      SetUnitedStates(states);\n    });\n  };\n  const selectCountry = (value) => {\n    setPprefix(\"+\" + value.phoneCode);\n    setcountry2(value.value);\n    setCode2(value.label);\n  };\n\n  useEffect(() => {\n    userService.country().then((res) => {\n      const countries = res.data.map((country) => ({\n        value: country.countryCode,\n        label: country.countryName,\n        phoneCode: country.phonePrefix,\n      }));\n      setCountryCode(countries);\n    });\n  }, []);\n\n  useEffect(() => {\n    userService.currencyPair().then((response) => {\n      const pairs = response.data.map((pair) => ({\n        value: pair.id,\n        label: pair.pair,\n      }));\n      setStorePair(pairs);\n    });\n  }, []);\n\n  const currencyRate = (value) => {\n    setCurrencyPair(value.label);\n    const split = value.label.toString();\n    const splited = split.substring(0, 3);\n    const splited2 = split.substring(5, 9);\n    setCurrencyLabel(splited);\n    setCurrencyLabel2(splited2);\n    userService.exchangeRate().then((response) => {\n      console.log(response);\n    });\n  };\n\n  const exchange = (e) => {\n    console.log(e);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = {\n      purposeOfFund: description,\n      transactionType: ftransactionTypeCode, // only allows  FOSA,LOAN,SCHEME\n      transactionTypeCode: schemess, // if transactionType is FOSA,leave blank else provide either schemeCode or loanTypeCode\n      email: email1,\n      amount: converted,\n      currencyPair: currencyPair,\n      exchangeRate: 107.1,\n      beneficiary: {\n        firstName: bFirstname,\n        lastName: bSecondName,\n        clientId: storeValue, // clientId of client to which beneficiary belongs\n        phone: {\n          phone: prefix,\n          countryCode: country2,\n        },\n      },\n      billingInformation: {\n        cardData: {\n          creditCardNumber: number, // takes a valid credit card number\n          cardSecurityCode: cvc, // card CVC - 3 digits long\n          expiryDate: expiry, // card expiry date in the format MM/YY\n        },\n        firstName: name,\n        lastName: secondName,\n        phone: {\n          phone: phonePrefix,\n          countryCode: country,\n        },\n        currency: currencyLabel1, // retrieve from currency pair in question\n        state: ustates, // if country is US ,use USA states\n        country: code1,\n        address1: address1,\n        address2: adress2,\n      },\n    };\n    axios\n      .post(\"/api/qsend/v1/transactions\", formData, { headers: authHeader() })\n      .then(function (res) {\n        if (res.data.status === 0) {\n          // Swal.fire(\n          //     '',\n          //     res.data.message,\n          //     'success'\n          // )\n          toast.success(res.data.message, {\n            position: toast.POSITION.TOP_CENTER,\n          });\n          reload();\n        } else {\n          // Swal.fire(\n          //     '',\n          //     res.data.message,\n          //     'error'\n          // )\n          toast.error(res.data.message, {\n            position: toast.POSITION.TOP_CENTER,\n          });\n        }\n      });\n  };\n\n  const scheduled = () => {\n    setShowScheduled(!showScheduled);\n  };\n\n  const converter = (values) => {\n    setAfterExchane(values);\n    setConverted(values * 109.9);\n  };\n\n  const selectedState = (value) => {\n    setUStates(value.value);\n  };\n  const schemes = (value) => {\n    setSchemes(value.value);\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"Sender Information\" disableWidgetMenu>\n            <div className={classes.PaymentBar}>\n              <Paper className={classes.layout}>\n                <Grid className={classes.paper} container spacing={2}>\n                  <Grid item xs={12} sm={12}>\n                    <Card\n                      cvc={cvc}\n                      number={number}\n                      expiry={expiry}\n                      name={name}\n                      focus={focus}\n                      preview=\"true\"\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"First Name\"\n                      name=\"firstname\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                      onFocus={(e) => setFocus(e.target.name)}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Second Name \"\n                      name=\"city\"\n                      variant=\"outlined\"\n                      onChange={(e) => setSecondNmae(e.target.value)}\n                      margin=\"normal\"\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      type=\"tel\"\n                      label=\"Card Number\"\n                      value={number}\n                      name=\"lastName\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      onChange={(e) => setNumber(e.target.value)}\n                      onFocus={(e) => setFocus(e.target.name)}\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Card Expiry Date\"\n                      placeholder=\"mm/yy\"\n                      name=\"date\"\n                      // type=\"date\"\n                      defaultValue=\"2021-12\"\n                      margin=\"normal\"\n                      value={expiry}\n                      onChange={(e) => setExpiry(e.target.value)}\n                      onFocus={(e) => setFocus(e.target.name)}\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Cvc\"\n                      name=\"lastName\"\n                      variant=\"outlined\"\n                      value={cvc}\n                      onChange={(e) => setCvc(e.target.value)}\n                      onFocus={(e) => setFocus(e.target.name)}\n                      margin=\"normal\"\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <Select\n                      label=\"Country\"\n                      placeholder=\"Country\"\n                      options={countryCode}\n                      onChange={selectState}\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <Select\n                      fullWidth\n                      placeholder=\"State\"\n                      label=\" select States\"\n                      options={unitedstates}\n                      onChange={selectedState}\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\" phone number \"\n                      value={phonePrefix}\n                      onChange={(e) => setPhonePrefix(e.target.value)}\n                      margin=\"normal\"\n                      type=\"text\"\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Email Addreess \"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      value={email1}\n                      onChange={(e) => setEmail1(e.target.value)}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Address 1 \"\n                      id=\"outlined-basic\"\n                      name=\"city\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      onChange={(e) => setAddress1(e.target.value)}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Address 2 \"\n                      name=\"city\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      onChange={(e) => setAddress2(e.target.value)}\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <Select\n                      fullWidth\n                      placeholder=\"Currency Pair\"\n                      options={storePair}\n                      onChange={currencyRate}\n                      variant=\"outlined\"\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      label={\"Enter Amount in \" + currencyLabel}\n                      name=\"lastName\"\n                      variant=\"outlined\"\n                      onChange={(e) => converter(e.target.value)}\n                      margin=\"normal\"\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      label={\"Amount converted to\" + currencyLabel1}\n                      name=\"lastName\"\n                      variant=\"outlined\"\n                      value={afterExchage * 109.1}\n                      onChange={(e) => setAmount(e.target.value)}\n                      margin=\"normal\"\n                      required\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"Beneficiary Details\" disableWidgetMenu>\n            <div className={classes.PaymentBar}>\n              <Paper className={classes.layout}>\n                <Grid className={classes.paper} container spacing={2}>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Beneficiary firstName \"\n                      name=\"city\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      onChange={(e) => setBfirstName(e.target.value)}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Beneficiary SecondName \"\n                      name=\"city\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      onChange={(e) => setBsecondname(e.target.value)}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Email Address \"\n                      name=\"city\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      onChange={(e) => setEmail2(e.target.value)}\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <Select\n                      label=\"Country\"\n                      placeholder=\"Country\"\n                      options={countryCode}\n                      onChange={selectCountry}\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Beneficiary phone number \"\n                      value={prefix}\n                      variant=\"outlined\"\n                      onChange={(e) => setPprefix(e.target.value)}\n                      margin=\"normal\"\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <Select\n                      options={client}\n                      onChange={handleChange}\n                      placeholder=\"Client\"\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={6} sm={6}>\n                    <Select\n                      options={options}\n                      onChange={fetchSchemes}\n                      placeholder=\"Schemes\"\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} sm={6}>\n                    <Select\n                      options={finalOption}\n                      placeholder=\"Details\"\n                      onChange={schemes}\n                      required\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Brief Description\"\n                      name=\"lastName\"\n                      variant=\"outlined\"\n                      onChange={(e) => setDescription(e.target.value)}\n                      margin=\"normal\"\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <div>\n                      <input\n                        type=\"checkbox\"\n                        checked={showScheduled}\n                        onChange={scheduled}\n                      />\n\n                      <span>schedule payment</span>\n                      {showScheduled && (\n                        <Grid item xs={6} sm={12}>\n                          <TextField\n                            fullWidth\n                            label=\" \"\n                            type=\"date\"\n                            name=\"city\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                          />\n                          <input type=\"checkbox\" /> <span>every month</span>\n                        </Grid>\n                      )}\n                    </div>\n                  </Grid>\n                </Grid>\n                <Grid item xs={6} sm={6}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    type=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Paper>\n            </div>\n          </Widget>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","/home/elvis/Job/IMT/src/pages/dashboard/Dashboard.js",["262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle\n        title=\"Dashboard\"\n        button={\n          <Button variant=\"contained\" size=\"medium\" color=\"secondary\">\n            Latest Reports\n          </Button>\n        }\n      />\n      <Grid container spacing={4}>\n        {mock.bigStat.map((stat) => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          <Widget\n            title=\"All Payments\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","/home/elvis/Job/IMT/src/components/Sidebar/Sidebar.js",["284","285","286"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = () => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const userp = [\n    { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\n    {\n      id: 1,\n      label: \"Make Remittance\",\n      link: \"/app/typography\",\n      icon: <TypographyIcon />,\n    },\n    {\n      id: 2,\n      label: \"Transaction Details\",\n      link: \"/app/tables\",\n      icon: <TableIcon />,\n    },\n    {\n      id: 3,\n      label: \"Quick send\",\n      link: \"/app/notifications\",\n      icon: <NotificationsIcon />,\n    },\n    { id: 5, type: \"divider\" },\n    { id: 6, type: \"title\", label: \"HELP\" },\n\n    {\n      id: 8,\n      label: \"Support\",\n      link: \"https://lanstar.co.ke\",\n      icon: <SupportIcon />,\n    },\n    {\n      id: 9,\n      label: \"FAQ\",\n      link: \"https://lanstar.co.ke\",\n      icon: <FAQIcon />,\n    },\n    { id: 10, type: \"divider\" },\n    {\n      id: 9,\n      label: \"Settings\",\n      link: \"https://lanstar.co.ke\",\n      icon: <FAQIcon />,\n    },\n  ];\n\n  const Admin = [\n    { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\n    {\n      id: 4,\n      label: \"Admin\",\n      link: \"/app/ui\",\n      icon: <UIElementsIcon />,\n      children: [\n        { label: \"view Transactions\", link: \"/app/ui/icons\" },\n        { label: \"Add client\", link: \"/app/ui/charts\" },\n        { label: \"register user\", link: \"/app/ui/maps\" },\n      ],\n    },\n    { id: 5, type: \"divider\" },\n    { id: 6, type: \"title\", label: \"HELP\" },\n\n    {\n      id: 8,\n      label: \"Support\",\n      link: \"https://lanstar.co.ke\",\n      icon: <SupportIcon />,\n    },\n    {\n      id: 9,\n      label: \"FAQ\",\n      link: \"https://lanstar.co.ke\",\n      icon: <FAQIcon />,\n    },\n    { id: 10, type: \"divider\" },\n    {\n      id: 9,\n      label: \"Settings\",\n      link: \"https://lanstar.co.ke\",\n      icon: <FAQIcon />,\n    },\n  ];\n  if (user.data.roles.role === \"ADMIN\") {\n    return Admin;\n  } else if (user.data.roles.role === \"USER\") {\n    return userp;\n  }\n};\n\nconst tructure = [\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\n  {\n    id: 1,\n    label: \"Send Money\",\n    link: \"/app/typography\",\n    icon: <TypographyIcon />,\n  },\n  {\n    id: 2,\n    label: \"Transaction Details\",\n    link: \"/app/tables\",\n    icon: <TableIcon />,\n  },\n  {\n    id: 3,\n    label: \"Quick send\",\n    link: \"/app/notifications\",\n    icon: <NotificationsIcon />,\n  },\n  {\n    id: 4,\n    label: \"Admin\",\n    link: \"/app/ui\",\n    icon: <UIElementsIcon />,\n    children: [\n      { label: \"view Transactions\", link: \"/app/ui/icons\" },\n      { label: \"Add client\", link: \"/app/ui/charts\" },\n      { label: \"register user\", link: \"/app/ui/maps\" },\n    ],\n  },\n  { id: 5, type: \"divider\" },\n  { id: 6, type: \"title\", label: \"HELP\" },\n\n  {\n    id: 8,\n    label: \"Support\",\n    link: \"https://flatlogic.com/forum\",\n    icon: <SupportIcon />,\n  },\n  {\n    id: 9,\n    label: \"FAQ\",\n    link: \"https://flatlogic.com/forum\",\n    icon: <FAQIcon />,\n  },\n  { id: 10, type: \"divider\" },\n  {\n    id: 9,\n    label: \"Settings\",\n    link: \"https://flatlogic.com/forum\",\n    icon: <FAQIcon />,\n  },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure().map((link) => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/home/elvis/Job/IMT/src/components/Header/Header.js",["287","288","289","290","291","292","293","294","295"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link,\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\nimport userService from \"../../services/user.service\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h3\" weight=\"medium\" className={classes.logotype}>\n          Qsend System\n        </Typography>\n        <div className={classes.grow} />\n\n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={(e) => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={(e) => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={(e) => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              {user.data.firstName}\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"primary\"\n              href=\"https://lanstar.co.ke\"\n            >\n              lanstar\n            </Typography>\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/home/elvis/Job/IMT/src/pages/charts/styles.js",[],"/home/elvis/Job/IMT/src/components/Header/styles.js",[],"/home/elvis/Job/IMT/src/components/Sidebar/styles.js",[],"/home/elvis/Job/IMT/src/components/Sidebar/components/Dot.js",[],"/home/elvis/Job/IMT/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/elvis/Job/IMT/src/pages/dashboard/components/BigStat/BigStat.js",[],"/home/elvis/Job/IMT/src/pages/dashboard/components/Table/Table.js",[],"/home/elvis/Job/IMT/src/pages/dashboard/mock.js",[],"/home/elvis/Job/IMT/src/pages/dashboard/styles.js",[],"/home/elvis/Job/IMT/src/components/UserAvatar/UserAvatar.js",[],"/home/elvis/Job/IMT/src/components/Notification/Notification.js",[],"/home/elvis/Job/IMT/src/components/PageTitle/PageTitle.js",[],"/home/elvis/Job/IMT/src/pages/typography/styles.js",[],"/home/elvis/Job/IMT/src/components/Widget/Widget.js",[],"/home/elvis/Job/IMT/src/components/Wrappers/Wrappers.js",[],"/home/elvis/Job/IMT/src/pages/notifications/styles.js",[],"/home/elvis/Job/IMT/src/pages/maps/styles.js",[],"/home/elvis/Job/IMT/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/elvis/Job/IMT/src/pages/dashboard/components/BigStat/styles.js",[],"/home/elvis/Job/IMT/src/components/UserAvatar/styles.js",[],"/home/elvis/Job/IMT/src/components/Notification/styles.js",[],"/home/elvis/Job/IMT/src/components/PageTitle/styles.js",[],"/home/elvis/Job/IMT/src/components/Widget/styles.js",[],{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","severity":1,"message":"301","line":36,"column":1,"nodeType":"302","endLine":41,"endColumn":3},{"ruleId":"303","severity":1,"message":"304","line":13,"column":8,"nodeType":"305","messageId":"306","endLine":13,"endColumn":18},{"ruleId":"303","severity":1,"message":"307","line":14,"column":8,"nodeType":"305","messageId":"306","endLine":14,"endColumn":18},{"ruleId":"303","severity":1,"message":"308","line":25,"column":8,"nodeType":"305","messageId":"306","endLine":25,"endColumn":14},{"ruleId":"303","severity":1,"message":"309","line":30,"column":10,"nodeType":"305","messageId":"306","endLine":30,"endColumn":19},{"ruleId":"303","severity":1,"message":"310","line":43,"column":8,"nodeType":"305","messageId":"306","endLine":43,"endColumn":17},{"ruleId":"303","severity":1,"message":"311","line":43,"column":19,"nodeType":"305","messageId":"306","endLine":43,"endColumn":31},{"ruleId":"300","severity":1,"message":"301","line":75,"column":1,"nodeType":"302","endLine":92,"endColumn":3},{"ruleId":"303","severity":1,"message":"312","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":18},{"ruleId":"303","severity":1,"message":"313","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":12},{"ruleId":"303","severity":1,"message":"314","line":10,"column":8,"nodeType":"305","messageId":"306","endLine":10,"endColumn":19},{"ruleId":"303","severity":1,"message":"315","line":14,"column":8,"nodeType":"305","messageId":"306","endLine":14,"endColumn":17},{"ruleId":"303","severity":1,"message":"316","line":16,"column":10,"nodeType":"305","messageId":"306","endLine":16,"endColumn":20},{"ruleId":"303","severity":1,"message":"317","line":20,"column":8,"nodeType":"305","messageId":"306","endLine":20,"endColumn":18},{"ruleId":"303","severity":1,"message":"309","line":22,"column":10,"nodeType":"305","messageId":"306","endLine":22,"endColumn":19},{"ruleId":"303","severity":1,"message":"318","line":22,"column":21,"nodeType":"305","messageId":"306","endLine":22,"endColumn":41},{"ruleId":"303","severity":1,"message":"319","line":33,"column":9,"nodeType":"305","messageId":"306","endLine":33,"endColumn":13},{"ruleId":"303","severity":1,"message":"320","line":59,"column":10,"nodeType":"305","messageId":"306","endLine":59,"endColumn":17},{"ruleId":"303","severity":1,"message":"321","line":61,"column":10,"nodeType":"305","messageId":"306","endLine":61,"endColumn":15},{"ruleId":"303","severity":1,"message":"322","line":78,"column":9,"nodeType":"305","messageId":"306","endLine":78,"endColumn":20},{"ruleId":"303","severity":1,"message":"323","line":84,"column":9,"nodeType":"305","messageId":"306","endLine":84,"endColumn":16},{"ruleId":"303","severity":1,"message":"324","line":98,"column":9,"nodeType":"305","messageId":"306","endLine":98,"endColumn":20},{"ruleId":"303","severity":1,"message":"325","line":8,"column":8,"nodeType":"305","messageId":"306","endLine":8,"endColumn":14},{"ruleId":"303","severity":1,"message":"326","line":9,"column":8,"nodeType":"305","messageId":"306","endLine":9,"endColumn":13},{"ruleId":"303","severity":1,"message":"327","line":12,"column":8,"nodeType":"305","messageId":"306","endLine":12,"endColumn":12},{"ruleId":"303","severity":1,"message":"319","line":24,"column":9,"nodeType":"305","messageId":"306","endLine":24,"endColumn":13},{"ruleId":"303","severity":1,"message":"328","line":90,"column":9,"nodeType":"305","messageId":"306","endLine":90,"endColumn":16},{"ruleId":"303","severity":1,"message":"325","line":8,"column":8,"nodeType":"305","messageId":"306","endLine":8,"endColumn":14},{"ruleId":"303","severity":1,"message":"326","line":9,"column":8,"nodeType":"305","messageId":"306","endLine":9,"endColumn":13},{"ruleId":"303","severity":1,"message":"327","line":12,"column":8,"nodeType":"305","messageId":"306","endLine":12,"endColumn":12},{"ruleId":"303","severity":1,"message":"328","line":85,"column":9,"nodeType":"305","messageId":"306","endLine":85,"endColumn":16},{"ruleId":"303","severity":1,"message":"312","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":18},{"ruleId":"303","severity":1,"message":"329","line":3,"column":8,"nodeType":"305","messageId":"306","endLine":3,"endColumn":19},{"ruleId":"303","severity":1,"message":"313","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":12},{"ruleId":"303","severity":1,"message":"314","line":10,"column":8,"nodeType":"305","messageId":"306","endLine":10,"endColumn":19},{"ruleId":"303","severity":1,"message":"315","line":14,"column":8,"nodeType":"305","messageId":"306","endLine":14,"endColumn":17},{"ruleId":"303","severity":1,"message":"316","line":16,"column":10,"nodeType":"305","messageId":"306","endLine":16,"endColumn":20},{"ruleId":"303","severity":1,"message":"317","line":20,"column":8,"nodeType":"305","messageId":"306","endLine":20,"endColumn":18},{"ruleId":"303","severity":1,"message":"318","line":22,"column":10,"nodeType":"305","messageId":"306","endLine":22,"endColumn":30},{"ruleId":"303","severity":1,"message":"319","line":34,"column":9,"nodeType":"305","messageId":"306","endLine":34,"endColumn":13},{"ruleId":"303","severity":1,"message":"312","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":18},{"ruleId":"303","severity":1,"message":"314","line":10,"column":8,"nodeType":"305","messageId":"306","endLine":10,"endColumn":19},{"ruleId":"303","severity":1,"message":"315","line":14,"column":8,"nodeType":"305","messageId":"306","endLine":14,"endColumn":17},{"ruleId":"303","severity":1,"message":"316","line":16,"column":10,"nodeType":"305","messageId":"306","endLine":16,"endColumn":20},{"ruleId":"303","severity":1,"message":"317","line":20,"column":8,"nodeType":"305","messageId":"306","endLine":20,"endColumn":18},{"ruleId":"303","severity":1,"message":"318","line":22,"column":10,"nodeType":"305","messageId":"306","endLine":22,"endColumn":30},{"ruleId":"303","severity":1,"message":"330","line":29,"column":10,"nodeType":"305","messageId":"306","endLine":29,"endColumn":15},{"ruleId":"303","severity":1,"message":"331","line":29,"column":17,"nodeType":"305","messageId":"306","endLine":29,"endColumn":25},{"ruleId":"303","severity":1,"message":"332","line":41,"column":10,"nodeType":"305","messageId":"306","endLine":41,"endColumn":16},{"ruleId":"303","severity":1,"message":"333","line":44,"column":10,"nodeType":"305","messageId":"306","endLine":44,"endColumn":16},{"ruleId":"303","severity":1,"message":"334","line":51,"column":10,"nodeType":"305","messageId":"306","endLine":51,"endColumn":15},{"ruleId":"335","severity":1,"message":"336","line":113,"column":21,"nodeType":"337","messageId":"338","endLine":113,"endColumn":23},{"ruleId":"335","severity":1,"message":"336","line":122,"column":28,"nodeType":"337","messageId":"338","endLine":122,"endColumn":30},{"ruleId":"303","severity":1,"message":"339","line":195,"column":9,"nodeType":"305","messageId":"306","endLine":195,"endColumn":17},{"ruleId":"303","severity":1,"message":"340","line":4,"column":3,"nodeType":"305","messageId":"306","endLine":4,"endColumn":17},{"ruleId":"303","severity":1,"message":"341","line":5,"column":3,"nodeType":"305","messageId":"306","endLine":5,"endColumn":9},{"ruleId":"303","severity":1,"message":"342","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":16},{"ruleId":"303","severity":1,"message":"343","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":11},{"ruleId":"303","severity":1,"message":"344","line":12,"column":3,"nodeType":"305","messageId":"306","endLine":12,"endColumn":22},{"ruleId":"303","severity":1,"message":"345","line":13,"column":3,"nodeType":"305","messageId":"306","endLine":13,"endColumn":16},{"ruleId":"303","severity":1,"message":"346","line":14,"column":3,"nodeType":"305","messageId":"306","endLine":14,"endColumn":12},{"ruleId":"303","severity":1,"message":"347","line":15,"column":3,"nodeType":"305","messageId":"306","endLine":15,"endColumn":12},{"ruleId":"303","severity":1,"message":"348","line":16,"column":3,"nodeType":"305","messageId":"306","endLine":16,"endColumn":7},{"ruleId":"303","severity":1,"message":"349","line":17,"column":3,"nodeType":"305","messageId":"306","endLine":17,"endColumn":7},{"ruleId":"303","severity":1,"message":"350","line":18,"column":3,"nodeType":"305","messageId":"306","endLine":18,"endColumn":11},{"ruleId":"303","severity":1,"message":"351","line":19,"column":3,"nodeType":"305","messageId":"306","endLine":19,"endColumn":6},{"ruleId":"303","severity":1,"message":"352","line":20,"column":3,"nodeType":"305","messageId":"306","endLine":20,"endColumn":7},{"ruleId":"303","severity":1,"message":"353","line":21,"column":3,"nodeType":"305","messageId":"306","endLine":21,"endColumn":8},{"ruleId":"303","severity":1,"message":"354","line":22,"column":3,"nodeType":"305","messageId":"306","endLine":22,"endColumn":8},{"ruleId":"303","severity":1,"message":"316","line":32,"column":10,"nodeType":"305","messageId":"306","endLine":32,"endColumn":20},{"ruleId":"303","severity":1,"message":"355","line":33,"column":8,"nodeType":"305","messageId":"306","endLine":33,"endColumn":11},{"ruleId":"303","severity":1,"message":"356","line":37,"column":7,"nodeType":"305","messageId":"306","endLine":37,"endColumn":20},{"ruleId":"303","severity":1,"message":"357","line":38,"column":7,"nodeType":"305","messageId":"306","endLine":38,"endColumn":19},{"ruleId":"303","severity":1,"message":"358","line":47,"column":7,"nodeType":"305","messageId":"306","endLine":47,"endColumn":12},{"ruleId":"303","severity":1,"message":"359","line":50,"column":8,"nodeType":"305","messageId":"306","endLine":50,"endColumn":22},{"ruleId":"303","severity":1,"message":"360","line":50,"column":24,"nodeType":"305","messageId":"306","endLine":50,"endColumn":41},{"ruleId":"303","severity":1,"message":"361","line":10,"column":19,"nodeType":"305","messageId":"306","endLine":10,"endColumn":30},{"ruleId":"303","severity":1,"message":"355","line":23,"column":8,"nodeType":"305","messageId":"306","endLine":23,"endColumn":11},{"ruleId":"303","severity":1,"message":"362","line":121,"column":7,"nodeType":"305","messageId":"306","endLine":121,"endColumn":15},{"ruleId":"303","severity":1,"message":"363","line":9,"column":3,"nodeType":"305","messageId":"306","endLine":9,"endColumn":6},{"ruleId":"303","severity":1,"message":"364","line":10,"column":3,"nodeType":"305","messageId":"306","endLine":10,"endColumn":7},{"ruleId":"303","severity":1,"message":"365","line":18,"column":11,"nodeType":"305","messageId":"306","endLine":18,"endColumn":19},{"ruleId":"303","severity":1,"message":"366","line":27,"column":29,"nodeType":"305","messageId":"306","endLine":27,"endColumn":35},{"ruleId":"303","severity":1,"message":"367","line":28,"column":8,"nodeType":"305","messageId":"306","endLine":28,"endColumn":20},{"ruleId":"303","severity":1,"message":"368","line":29,"column":8,"nodeType":"305","messageId":"306","endLine":29,"endColumn":18},{"ruleId":"303","severity":1,"message":"369","line":38,"column":8,"nodeType":"305","messageId":"306","endLine":38,"endColumn":19},{"ruleId":"303","severity":1,"message":"370","line":102,"column":8,"nodeType":"305","messageId":"306","endLine":102,"endColumn":16},{"ruleId":"303","severity":1,"message":"371","line":104,"column":8,"nodeType":"305","messageId":"306","endLine":104,"endColumn":25},"no-native-reassign",["372"],"no-negated-in-lhs",["373"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'classnames' is defined but never used.","Identifier","unusedVar","'authHeader' is defined but never used.","'google' is defined but never used.","'mdiReload' is defined but never used.","'nameValue' is assigned a value but never used.","'setNameValue' is assigned a value but never used.","'Checkbox' is defined but never used.","'Card' is defined but never used.","'FormControl' is defined but never used.","'PageTitle' is defined but never used.","'Typography' is defined but never used.","'PhoneInput' is defined but never used.","'mdiVideoMinusOutline' is defined but never used.","'data' is assigned a value but never used.","'country' is assigned a value but never used.","'roles' is assigned a value but never used.","'refreshPage' is assigned a value but never used.","'options' is assigned a value but never used.","'handleRoles' is assigned a value but never used.","'Widget' is defined but never used.","'Table' is defined but never used.","'mock' is defined but never used.","'classes' is assigned a value but never used.","'UserService' is defined but never used.","'phone' is assigned a value but never used.","'setPhone' is assigned a value but never used.","'email2' is assigned a value but never used.","'amount' is assigned a value but never used.","'code2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'exchange' is assigned a value but never used.","'LinearProgress' is defined but never used.","'Select' is defined but never used.","'OutlinedInput' is defined but never used.","'MenuItem' is defined but never used.","'ResponsiveContainer' is defined but never used.","'ComposedChart' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Area' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'YAxis' is defined but never used.","'XAxis' is defined but never used.","'Dot' is defined but never used.","'mainChartData' is assigned a value but never used.","'PieChartData' is assigned a value but never used.","'theme' is assigned a value but never used.","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.","'LibraryIcon' is defined but never used.","'tructure' is assigned a value but never used.","'Fab' is defined but never used.","'Link' is defined but never used.","'SendIcon' is defined but never used.","'Button' is defined but never used.","'Notification' is defined but never used.","'UserAvatar' is defined but never used.","'userService' is defined but never used.","'mailMenu' is assigned a value but never used.","'notificationsMenu' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]