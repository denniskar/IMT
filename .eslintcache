[{"D:\\private\\school\\themez\\react-material-admin\\src\\index.js":"1","D:\\private\\school\\themez\\react-material-admin\\src\\serviceWorker.js":"2","D:\\private\\school\\themez\\react-material-admin\\src\\context\\LayoutContext.js":"3","D:\\private\\school\\themez\\react-material-admin\\src\\context\\UserContext.js":"4","D:\\private\\school\\themez\\react-material-admin\\src\\components\\App.js":"5","D:\\private\\school\\themez\\react-material-admin\\src\\themes\\index.js":"6","D:\\private\\school\\themez\\react-material-admin\\src\\themes\\default.js":"7","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Layout\\Layout.js":"8","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\error\\Error.js":"9","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\login\\Login.js":"10","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\charts\\Charts.js":"11","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\charts\\components\\ApexHeatmap.js":"12","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\charts\\components\\ApexLineChart.js":"13","D:\\private\\school\\themez\\react-material-admin\\src\\components\\PageTitle\\PageTitle.js":"14","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Widget\\Widget.js":"15","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Widget\\styles.js":"16","D:\\private\\school\\themez\\react-material-admin\\src\\components\\PageTitle\\styles.js":"17","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\login\\styles.js":"18","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\error\\styles.js":"19","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Layout\\styles.js":"20","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Wrappers\\Wrappers.js":"21","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\icons\\Icons.js":"22","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\maps\\Maps.js":"23","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\tables\\Tables.js":"24","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\Dashboard.js":"25","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\typography\\Typography.js":"26","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\notifications\\Notifications.js":"27","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Sidebar\\Sidebar.js":"28","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Header\\Header.js":"29","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\mock.js":"30","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Header\\styles.js":"31","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Sidebar\\styles.js":"32","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"33","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Sidebar\\components\\Dot.js":"34","D:\\private\\school\\themez\\react-material-admin\\src\\components\\UserAvatar\\UserAvatar.js":"35","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Notification\\Notification.js":"36","D:\\private\\school\\themez\\react-material-admin\\src\\components\\UserAvatar\\styles.js":"37","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"38","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Notification\\styles.js":"39","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\typography\\styles.js":"40","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\notifications\\styles.js":"41","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\styles.js":"42","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\maps\\styles.js":"43","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\icons\\styles.js":"44","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"45","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\components\\Table\\Table.js":"46","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"47","D:\\private\\school\\themez\\react-material-admin\\src\\services\\auth.service.js":"48","D:\\private\\school\\themez\\react-material-admin\\src\\services\\user.service.js":"49","D:\\private\\school\\themez\\react-material-admin\\src\\services\\auth-header.js":"50","D:\\private\\school\\themez\\react-material-admin\\src\\components\\controls\\FormControls.jsx":"51"},{"size":896,"mtime":1620738228911,"results":"52","hashOfConfig":"53"},{"size":5083,"mtime":1620738228935,"results":"54","hashOfConfig":"53"},{"size":1444,"mtime":1620738228910,"results":"55","hashOfConfig":"53"},{"size":2137,"mtime":1621248145667,"results":"56","hashOfConfig":"53"},{"size":1787,"mtime":1620738228881,"results":"57","hashOfConfig":"53"},{"size":534,"mtime":1620738228940,"results":"58","hashOfConfig":"53"},{"size":3127,"mtime":1620738228936,"results":"59","hashOfConfig":"53"},{"size":3969,"mtime":1621221127084,"results":"60","hashOfConfig":"53"},{"size":1626,"mtime":1620738228919,"results":"61","hashOfConfig":"53"},{"size":9229,"mtime":1621603435705,"results":"62","hashOfConfig":"53"},{"size":5790,"mtime":1620738228912,"results":"63","hashOfConfig":"53"},{"size":1909,"mtime":1620738228913,"results":"64","hashOfConfig":"53"},{"size":1396,"mtime":1620738228914,"results":"65","hashOfConfig":"53"},{"size":447,"mtime":1620738228895,"results":"66","hashOfConfig":"53"},{"size":2581,"mtime":1620738228906,"results":"67","hashOfConfig":"53"},{"size":1015,"mtime":1620738228908,"results":"68","hashOfConfig":"53"},{"size":482,"mtime":1620738228896,"results":"69","hashOfConfig":"53"},{"size":3283,"mtime":1621080454516,"results":"70","hashOfConfig":"53"},{"size":1395,"mtime":1620738228920,"results":"71","hashOfConfig":"53"},{"size":710,"mtime":1620738228890,"results":"72","hashOfConfig":"53"},{"size":3971,"mtime":1620738228909,"results":"73","hashOfConfig":"53"},{"size":10241,"mtime":1621592229057,"results":"74","hashOfConfig":"53"},{"size":11050,"mtime":1621603229563,"results":"75","hashOfConfig":"53"},{"size":2146,"mtime":1620738228932,"results":"76","hashOfConfig":"53"},{"size":3056,"mtime":1621024422661,"results":"77","hashOfConfig":"53"},{"size":20045,"mtime":1621606406110,"results":"78","hashOfConfig":"53"},{"size":6004,"mtime":1621592844248,"results":"79","hashOfConfig":"53"},{"size":5752,"mtime":1621718516586,"results":"80","hashOfConfig":"53"},{"size":10242,"mtime":1621241392498,"results":"81","hashOfConfig":"53"},{"size":4324,"mtime":1621024341601,"results":"82","hashOfConfig":"53"},{"size":4069,"mtime":1621080264258,"results":"83","hashOfConfig":"53"},{"size":1363,"mtime":1620738228904,"results":"84","hashOfConfig":"53"},{"size":4589,"mtime":1620738228902,"results":"85","hashOfConfig":"53"},{"size":902,"mtime":1620738228901,"results":"86","hashOfConfig":"53"},{"size":620,"mtime":1620738228905,"results":"87","hashOfConfig":"53"},{"size":3413,"mtime":1620738228891,"results":"88","hashOfConfig":"53"},{"size":291,"mtime":1620738228906,"results":"89","hashOfConfig":"53"},{"size":1474,"mtime":1620738228903,"results":"90","hashOfConfig":"53"},{"size":1040,"mtime":1620738228893,"results":"91","hashOfConfig":"53"},{"size":1199,"mtime":1621430991849,"results":"92","hashOfConfig":"53"},{"size":1080,"mtime":1621239429654,"results":"93","hashOfConfig":"53"},{"size":3000,"mtime":1620738228919,"results":"94","hashOfConfig":"53"},{"size":1199,"mtime":1621597483755,"results":"95","hashOfConfig":"53"},{"size":812,"mtime":1620738228925,"results":"96","hashOfConfig":"53"},{"size":4160,"mtime":1620738228916,"results":"97","hashOfConfig":"53"},{"size":1323,"mtime":1620738228917,"results":"98","hashOfConfig":"53"},{"size":1075,"mtime":1620738228917,"results":"99","hashOfConfig":"53"},{"size":808,"mtime":1621711910245,"results":"100","hashOfConfig":"53"},{"size":1685,"mtime":1621409901546,"results":"101","hashOfConfig":"53"},{"size":390,"mtime":1621712448682,"results":"102","hashOfConfig":"53"},{"size":5279,"mtime":1621256925069,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"21238k",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"D:\\private\\school\\themez\\react-material-admin\\src\\index.js",[],["216","217"],"D:\\private\\school\\themez\\react-material-admin\\src\\serviceWorker.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\context\\LayoutContext.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\context\\UserContext.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\App.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\themes\\index.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\themes\\default.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Layout\\Layout.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\error\\Error.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\login\\Login.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\charts\\Charts.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Widget\\Widget.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Widget\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\PageTitle\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\login\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\error\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Layout\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\icons\\Icons.js",["218"],"import {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { TextInput } from \"../../components/controls/FormControls\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n  clientId: yup.string().required(\"Field is required\"),\r\n\r\n  email: yup.string().required(\"Field is required\"),\r\n\r\n  clientName: yup\r\n    .string()\r\n    .required(\"Field is required\")\r\n    .test(\"len\", \"Must be more than 1 characters\", (val) => val.length > 1)\r\n    .matches(/^([^0-9]*)$/, \"Field cannot contain numbers\"),\r\n});\r\n\r\ntoast.configure();\r\n\r\nconst MemberMainBanks = () => {\r\n  const classes = useStyles();\r\n\r\n  const values = {\r\n    clientId: \"\",\r\n    clientName: \"\",\r\n    email: \"\",\r\n    businessNo: \"\",\r\n    phoneNumber: \"\",\r\n    lastModified: \"\",\r\n  };\r\n\r\n  const [selected, setSelected] = useState(values);\r\n  const [data, setData] = useState([]);\r\n  const [loading, isLoading] = useState(true);\r\n\r\n  const { handleSubmit, errors, reset, control, setValue } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(schema),\r\n    defaultValues: values,\r\n  });\r\n\r\n  const columns = [\r\n    { name: \"clientId\", label: \"Client Id\" },\r\n    { name: \"clientName\", label: \"client Name\" },\r\n    { name: \"email\", label: \"Email\" },\r\n    { name: \"businessNo\", label: \"Business Number\" },\r\n    { name: \"phoneNumber\", label: \"phoneNumber\" },\r\n    { name: \"lastModified\", label: \"last modified\" },\r\n  ];\r\n\r\n  const tableOptions = {\r\n    filter: false,\r\n    download: false,\r\n    print: true,\r\n    viewColumns: false,\r\n    elevation: 0,\r\n    selectableRows: \"single\",\r\n    selectableRowsOnClick: true,\r\n    selectToolbarPlacement: \"none\",\r\n    onRowSelectionChange: (row, all, rows) => {\r\n      if (rows.length > 0) {\r\n        let current = data[rows[0]];\r\n        setSelected(current);\r\n\r\n        Object.keys(current).map((key) => {\r\n          setValue(key, current[key]);\r\n        });\r\n      } else {\r\n        newRecord();\r\n      }\r\n    },\r\n  };\r\n\r\n  const newRecord = () => {\r\n    setSelected(values);\r\n    reset(values);\r\n  };\r\n\r\n  const deleteRecord = () => {\r\n    Swal.fire({\r\n      text: \"Do you want to Delete record => \" + selected.clientName + \"?\",\r\n      icon: \"warning\",\r\n      reverseButtons: true,\r\n      showCancelButton: true,\r\n      focusCancel: true,\r\n      confirmButtonText: \"Yes\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .post(\"fxt-maintenance/v1/deleteBank\", {\r\n            clientId: selected.clientId,\r\n          })\r\n          .then((res) => {\r\n            if (res.data.status === 0) {\r\n              // Swal.fire(\r\n              //     '',\r\n              //     'Record successfully deleted',\r\n              //     'success'\r\n              // )\r\n              toast.success(res.data.message, {\r\n                position: toast.POSITION.TOP_CENTER,\r\n              });\r\n\r\n              newRecord();\r\n              fetchAll();\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const save = (data) => {\r\n    console.log(123);\r\n    axios\r\n      .post(\"/api/qsend/v1/ /clients\", data)\r\n      .then(function (res) {\r\n        isLoading(false);\r\n\r\n        if (res.data.status === 0) {\r\n          // Swal.fire(\r\n          //     '',\r\n          //     res.data.message,\r\n          //     'success'\r\n          // )\r\n          toast.success(res.data.status, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n\r\n          // reset form\r\n          newRecord();\r\n          fetchAll();\r\n        } else {\r\n          // Swal.fire(\r\n          //     '',\r\n          //     res.data.message,\r\n          //     'error'\r\n          // )\r\n          toast.error(res.data.message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        isLoading(false);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    var edit = selected.clientId;\r\n\r\n    var data = {\r\n      oldBankCode: edit,\r\n      ...formData,\r\n    };\r\n\r\n    if (edit) {\r\n      Swal.fire({\r\n        text: \"Do you want to update record => \" + selected.clientName + \"?\",\r\n        icon: \"warning\",\r\n        reverseButtons: true,\r\n        showCancelButton: true,\r\n        focusCancel: true,\r\n        confirmButtonText: \"Yes\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          save(data);\r\n        }\r\n      });\r\n    } else {\r\n      save(data);\r\n    }\r\n  };\r\n\r\n  const fetchAll = () => {\r\n    UserService.client()\r\n      .then(function (res) {\r\n        // console.log(JSON.stringify(res.data));\r\n        console.log(res.data);\r\n        setData(res.data);\r\n        isLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        isLoading(false);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAll();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={2}>\r\n            <Grid item>\r\n              <form\r\n                onSubmit={handleSubmit(onSubmit)}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={4}>\r\n                    <TextInput\r\n                      control={control}\r\n                      error={!!errors.clientId}\r\n                      helperText={errors?.clientId?.message}\r\n                      label=\"client Id\"\r\n                      name=\"clientId\"\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={8}>\r\n                    <TextInput\r\n                      control={control}\r\n                      //  error={!!errors.clientName}\r\n                      //helperText={errors?.clientName?.message}\r\n                      label=\"Client Name\"\r\n                      name=\"clientName\"\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={4}>\r\n                    <TextInput\r\n                      control={control}\r\n                      // error={!!errors.email}\r\n                      //  helperText={errors?.email?.message}\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={8}>\r\n                    <TextInput\r\n                      control={control}\r\n                      // error={!!errors.businessNo}\r\n                      // helperText={errors?.businessNo?.message}\r\n                      label=\"Account Length\"\r\n                      name=\"Business Number\"\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextInput\r\n                      control={control}\r\n                      // error={!!errors.phoneNumber}\r\n                      // helperText={errors?.phoneNumber?.message}\r\n                      label=\"Phone Number\"\r\n                      name=\"phoneNumber\"\r\n                      required\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={6}>\r\n                    <TextInput\r\n                      control={control}\r\n                      //  error={!!errors.lastModified}\r\n                      //  helperText={errors?.lastModified?.message}\r\n                      label=\" Address \"\r\n                      name=\"lastModified\"\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={4}>\r\n                    {selected.clientId ? (\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={() => {\r\n                          deleteRecord();\r\n                        }}\r\n                        fullWidth\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={6} md={4}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      fullWidth\r\n                      onClick={() => {\r\n                        newRecord();\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} md={4}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item md={12}>\r\n                    {loading ? (\r\n                      <LinearProgress />\r\n                    ) : (\r\n                      <MUIDataTable\r\n                        data={data}\r\n                        columns={columns}\r\n                        options={tableOptions}\r\n                      />\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MemberMainBanks;\r\n","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\maps\\Maps.js",["219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"import React, { useState, useEffect } from \"react\";\r\nimport { Checkbox, Grid, Paper, TextField } from \"@material-ui/core\";\r\nimport UserService from \"../../services/user.service\";\r\nimport Card from \"react-credit-cards\";\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport authHeader from \"../../services/auth-header\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Select from \"react-select\";\r\nimport userService from \"../../services/user.service\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { mdiVideoMinusOutline } from \"@mdi/js\";\r\nimport axios from \"axios\";\r\n\r\nexport default function TypographyPage() {\r\n  const [client, setClient] = useState(\"\");\r\n  const [storeValue, SetStoreValue] = useState(\"\");\r\n  const [finalOption, setFinalOption] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [unitedstates, SetUnitedStates] = useState(\"\");\r\n  const [countryCode, setCountryCode] = useState(\"\");\r\n  const [storePair, setStorePair] = useState(\"\");\r\n  const [afterExchage, setAfterExchane] = useState(\"\");\r\n  const [phonePrefix, setPhonePrefix] = useState(\"\");\r\n  const [currencyLabel, setCurrencyLabel] = useState(\"\");\r\n  const [currencyLabel1, setCurrencyLabel2] = useState(\"\");\r\n  const [showScheduled, setShowScheduled] = useState(false);\r\n\r\n  ///submit values\r\n  const [email1, setEmail1] = useState(\"\");\r\n  const [email2, setEmail2] = useState(\"\");\r\n  const [address1, setAddress1] = useState(\"\");\r\n  const [adress2, setAddress2] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [bFirstname, setBfirstName] = useState(\"\");\r\n  const [bSecondName, setBsecondname] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [ftransactionTypeCode, setfTransactionTypeCode] = useState(\"\");\r\n\r\n  //modified select values\r\n  const [schemess, setSchemes] = useState(\"\");\r\n  const [ustates, setUStates] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [currencyPair, setCurrencyPair] = useState(\"\");\r\n  const [converted, setConverted] = useState(\"\");\r\n  const [country2, setcountry2] = useState(\"\");\r\n  //const[singleCurrency,setSingleCurrrency]=useState(\"\");\r\n\r\n  console.log(amount);\r\n  toast.configure();\r\n  useEffect(() => {\r\n    UserService.payment().then((response) => {});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    UserService.client().then((response) => {\r\n      const clients = response.data.map((client) => ({\r\n        value: client.clientId,\r\n        label: client.clientName,\r\n      }));\r\n\r\n      setClient(clients);\r\n    });\r\n  }, []);\r\n\r\n  var classes = useStyles();\r\n\r\n  const [cvc, setCvc] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [focus, setFocus] = useState(\"\");\r\n  const [secondName, setSecondNmae] = useState(\"\");\r\n\r\n  const options = [\r\n    { value: \"1\", label: \"Fosa\" },\r\n    { value: \"2\", label: \"Loan\" },\r\n    { value: \"3\", label: \"Schemes\" },\r\n  ];\r\n\r\n  const handleChange = (value) => {\r\n    SetStoreValue(value.value);\r\n  };\r\n\r\n  const fetchSchemes = (value) => {\r\n    const code = value.label;\r\n    setfTransactionTypeCode(code);\r\n    if (value.value == \"3\") {\r\n      userService.schemes(storeValue).then((response) => {\r\n        console.log(response);\r\n        const schemes = response.data.map((scheme) => ({\r\n          value: scheme.code,\r\n          label: scheme.name,\r\n        }));\r\n\r\n        setFinalOption(schemes);\r\n      });\r\n    } else if (value.value == \"2\") {\r\n      userService.loans(storeValue).then((response) => {\r\n        console.log(response);\r\n        const loans = response.data.map((loan) => ({\r\n          value: loan.code,\r\n          label: loan.name,\r\n        }));\r\n\r\n        setFinalOption(loans);\r\n      });\r\n    } else if (value.value === null) {\r\n      window.alert(\"please select the client \");\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const selectState = (value) => {\r\n    setCountry(value.value);\r\n    setcountry2(value.value);\r\n    setPhonePrefix(value.phoneCode);\r\n    userService.states(value.value).then((res) => {\r\n      const states = res.data.map((state) => ({\r\n        value: state.code,\r\n        label: state.state,\r\n      }));\r\n\r\n      console.log(states);\r\n      SetUnitedStates(states);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    userService.country().then((res) => {\r\n      const countries = res.data.map((country) => ({\r\n        value: country.countryCode,\r\n        label: country.countryName,\r\n        phoneCode: country.phonePrefix,\r\n      }));\r\n      setCountryCode(countries);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    userService.currencyPair().then((response) => {\r\n      const pairs = response.data.map((pair) => ({\r\n        value: pair.id,\r\n        label: pair.pair,\r\n      }));\r\n      setStorePair(pairs);\r\n    });\r\n  }, []);\r\n\r\n  const currencyRate = (value) => {\r\n    setCurrencyPair(value.label);\r\n    const split = value.label.toString();\r\n    const splited = split.substring(0, 3);\r\n    const splited2 = split.substring(5, 9);\r\n    setCurrencyLabel(splited);\r\n    setCurrencyLabel2(splited2);\r\n    userService.exchangeRate().then((response) => {\r\n      console.log(response);\r\n    });\r\n  };\r\n\r\n  const exchange = (e) => {\r\n    console.log(e);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = {\r\n      firstName: \"lanster\",\r\n      otherName: \"\",\r\n      lastName: \"lanster\",\r\n      email: \"lanster@lanstar.co.ke\",\r\n      phoneNumber: {\r\n        phone: \"254704033541\",\r\n        countryCode: \"KE\",\r\n      },\r\n      password: \"lanster\",\r\n      country: \"KENYA\",\r\n      role: \"USER\",\r\n    };\r\n    axios\r\n      .post(\"/api/qsend/v1/users\", formData, { headers: authHeader() })\r\n      .then(function (res) {\r\n        if (res.data.status === 0) {\r\n          // Swal.fire(\r\n          //     '',\r\n          //     res.data.message,\r\n          //     'success'\r\n          // )\r\n          toast.success(res.data.status, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n          // reset for\r\n        } else {\r\n          // Swal.fire(\r\n          //     '',\r\n          //     res.data.message,\r\n          //     'error'\r\n          // )\r\n          toast.error(res.data.message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        }\r\n      });\r\n\r\n    console.log(formData);\r\n  };\r\n\r\n  const scheduled = () => {\r\n    setShowScheduled(!showScheduled);\r\n  };\r\n\r\n  const converter = (values) => {\r\n    setAfterExchane(values);\r\n    setConverted(values * 109.9);\r\n  };\r\n\r\n  const selectedState = (value) => {\r\n    setUStates(value.value);\r\n  };\r\n  const schemes = (value) => {\r\n    setSchemes(value.value);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"User Details\" disableWidgetMenu>\r\n            <div className={classes.PaymentBar}>\r\n              <Paper className={classes.layout}>\r\n                <Grid className={classes.paper} container spacing={2}>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"First Name\"\r\n                      name=\"firstname\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      onFocus={(e) => setFocus(e.target.name)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Second Name \"\r\n                      name=\"city\"\r\n                      variant=\"outlined\"\r\n                      onChange={(e) => setSecondNmae(e.target.value)}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <Select\r\n                      label=\"Country\"\r\n                      placeholder=\"Country\"\r\n                      options={countryCode}\r\n                      onChange={selectState}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <Select\r\n                      fullWidth\r\n                      placeholder=\"role\"\r\n                      label=\" select States\"\r\n                      options={unitedstates}\r\n                      onChange={selectedState}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Email Addreess \"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      onchange={(e) => setEmail1(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"phoneNumber \"\r\n                      name=\"city\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      onchange={(e) => setAddress2(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"password \"\r\n                      name=\"city\"\r\n                      type=\"password\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      onchange={(e) => setAddress1(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"users  tables\" disableWidgetMenu>\r\n            <div className={classes.PaymentBar}>\r\n              <Paper className={classes.layout}>\r\n                <Grid className={classes.paper} container spacing={2}></Grid>\r\n                <Grid item xs={6} sm={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Paper>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\tables\\Tables.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\Dashboard.js",["272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\n\r\nconst mainChartData = getMainChartData();\r\nconst PieChartData = [\r\n  { name: \"Group A\", value: 400, color: \"primary\" },\r\n  { name: \"Group B\", value: 300, color: \"secondary\" },\r\n  { name: \"Group C\", value: 300, color: \"warning\" },\r\n  { name: \"Group D\", value: 200, color: \"success\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        title=\"Dashboard\"\r\n        button={\r\n          <Button variant=\"contained\" size=\"medium\" color=\"secondary\">\r\n            Latest Reports\r\n          </Button>\r\n        }\r\n      />\r\n      <Grid container spacing={4}>\r\n        {mock.bigStat.map((stat) => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))}\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            title=\"All Payments\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\typography\\Typography.js",["294","295","296","297","298","299","300","301","302","303","304","305","306","307","308"],"import React, { useState, useEffect } from \"react\";\r\nimport { Checkbox, Grid, Paper, TextField } from \"@material-ui/core\";\r\nimport UserService from \"../../services/user.service\";\r\nimport Card from \"react-credit-cards\";\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport authHeader from \"../../services/auth-header\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Select from \"react-select\";\r\nimport userService from \"../../services/user.service\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { mdiVideoMinusOutline } from \"@mdi/js\";\r\nimport axios from \"axios\";\r\n\r\nexport default function TypographyPage() {\r\n  const [client, setClient] = useState(\"\");\r\n  const [storeValue, SetStoreValue] = useState(\"\");\r\n  const [finalOption, setFinalOption] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [unitedstates, SetUnitedStates] = useState(\"\");\r\n  const [countryCode, setCountryCode] = useState(\"\");\r\n  const [storePair, setStorePair] = useState(\"\");\r\n  const [afterExchage, setAfterExchane] = useState(\"\");\r\n  const [phonePrefix, setPhonePrefix] = useState(\"\");\r\n  const [currencyLabel, setCurrencyLabel] = useState(\"\");\r\n  const [currencyLabel1, setCurrencyLabel2] = useState(\"\");\r\n  const [showScheduled, setShowScheduled] = useState(false);\r\n\r\n  ///submit values\r\n  const [email1, setEmail1] = useState(\"\");\r\n  const [email2, setEmail2] = useState(\"\");\r\n  const [address1, setAddress1] = useState(\"\");\r\n  const [adress2, setAddress2] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [bFirstname, setBfirstName] = useState(\"\");\r\n  const [bSecondName, setBsecondname] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [ftransactionTypeCode, setfTransactionTypeCode] = useState(\"\");\r\n\r\n  //modified select values\r\n  const [schemess, setSchemes] = useState(\"\");\r\n  const [ustates, setUStates] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [currencyPair, setCurrencyPair] = useState(\"\");\r\n  const [converted, setConverted] = useState(\"\");\r\n  const [country2, setcountry2] = useState(\"\");\r\n  //const[singleCurrency,setSingleCurrrency]=useState(\"\");\r\n\r\n  console.log(amount);\r\n  toast.configure();\r\n  useEffect(() => {\r\n    UserService.payment().then((response) => {});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    UserService.client().then((response) => {\r\n      const clients = response.data.map((client) => ({\r\n        value: client.clientId,\r\n        label: client.clientName,\r\n      }));\r\n\r\n      setClient(clients);\r\n    });\r\n  }, []);\r\n\r\n  var classes = useStyles();\r\n\r\n  const [cvc, setCvc] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [focus, setFocus] = useState(\"\");\r\n  const [secondName, setSecondNmae] = useState(\"\");\r\n\r\n  const options = [\r\n    { value: \"1\", label: \"FOSA\" },\r\n    { value: \"2\", label: \"LOAN\" },\r\n    { value: \"3\", label: \"SCHEME\" },\r\n  ];\r\n\r\n  const handleChange = (value) => {\r\n    SetStoreValue(value.value);\r\n  };\r\n\r\n  const fetchSchemes = (value) => {\r\n    const code = value.label;\r\n    setfTransactionTypeCode(code);\r\n    if (value.value == \"3\") {\r\n      userService.schemes(storeValue).then((response) => {\r\n        console.log(response);\r\n        const schemes = response.data.map((scheme) => ({\r\n          value: scheme.code,\r\n          label: scheme.name,\r\n        }));\r\n\r\n        setFinalOption(schemes);\r\n      });\r\n    } else if (value.value == \"2\") {\r\n      userService.loans(storeValue).then((response) => {\r\n        console.log(response);\r\n        const loans = response.data.map((loan) => ({\r\n          value: loan.code,\r\n          label: loan.name,\r\n        }));\r\n\r\n        setFinalOption(loans);\r\n      });\r\n    } else if (value.value === null) {\r\n      window.alert(\"please select the client \");\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const selectState = (value) => {\r\n    setCountry(value.value);\r\n    setcountry2(value.value);\r\n    setPhonePrefix(value.phoneCode);\r\n    userService.states(value.value).then((res) => {\r\n      const states = res.data.map((state) => ({\r\n        value: state.code,\r\n        label: state.state,\r\n      }));\r\n\r\n      console.log(states);\r\n      SetUnitedStates(states);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    userService.country().then((res) => {\r\n      const countries = res.data.map((country) => ({\r\n        value: country.countryCode,\r\n        label: country.countryName,\r\n        phoneCode: country.phonePrefix,\r\n      }));\r\n      setCountryCode(countries);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    userService.currencyPair().then((response) => {\r\n      const pairs = response.data.map((pair) => ({\r\n        value: pair.id,\r\n        label: pair.pair,\r\n      }));\r\n      setStorePair(pairs);\r\n    });\r\n  }, []);\r\n\r\n  const currencyRate = (value) => {\r\n    setCurrencyPair(value.label);\r\n    const split = value.label.toString();\r\n    const splited = split.substring(0, 3);\r\n    const splited2 = split.substring(5, 9);\r\n    setCurrencyLabel(splited);\r\n    setCurrencyLabel2(splited2);\r\n    userService.exchangeRate().then((response) => {\r\n      console.log(response);\r\n    });\r\n  };\r\n\r\n  const exchange = (e) => {\r\n    console.log(e);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = {\r\n      purposeOfFund: description,\r\n      transactionType: ftransactionTypeCode, // only allows  FOSA,LOAN,SCHEME\r\n      transactionTypeCode: schemess, // if transactionType is FOSA,leave blank else provide either schemeCode or loanTypeCode\r\n      email: email1,\r\n      amount: converted,\r\n      currencyPair: currencyPair,\r\n      exchangeRate: 107.1,\r\n      beneficiary: {\r\n        firstName: bFirstname,\r\n        lastName: bSecondName,\r\n        clientId: storeValue, // clientId of client to which beneficiary belongs\r\n        phone: {\r\n          phone: +254784435333,\r\n          countryCode: \"KE\",\r\n        },\r\n      },\r\n      billingInformation: {\r\n        cardData: {\r\n          creditCardNumber: number, // takes a valid credit card number\r\n          cardSecurityCode: cvc, // card CVC - 3 digits long\r\n          expiryDate: expiry, // card expiry date in the format MM/YY\r\n        },\r\n        firstName: name,\r\n        lastName: secondName,\r\n        phone: {\r\n          phone: +254796785456,\r\n          countryCode: \"KE\",\r\n        },\r\n        currency: currencyLabel1, // retrieve from currency pair in question\r\n        state: ustates, // if country is US ,use USA states\r\n        country: country,\r\n        address1: \"rehrb\",\r\n        address2: \"werff\",\r\n      },\r\n    };\r\n    axios\r\n      .post(\"/api/qsend/v1/transactions\", formData, { headers: authHeader() })\r\n      .then(function (res) {\r\n        if (res.data.status === 0) {\r\n          // Swal.fire(\r\n          //     '',\r\n          //     res.data.message,\r\n          //     'success'\r\n          // )\r\n          toast.success(res.data.status, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n          // reset for\r\n        } else {\r\n          // Swal.fire(\r\n          //     '',\r\n          //     res.data.message,\r\n          //     'error'\r\n          // )\r\n          toast.error(res.data.message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        }\r\n      });\r\n\r\n    console.log(formData);\r\n  };\r\n\r\n  const scheduled = () => {\r\n    setShowScheduled(!showScheduled);\r\n  };\r\n\r\n  const converter = (values) => {\r\n    setAfterExchane(values);\r\n    setConverted(values * 109.9);\r\n  };\r\n\r\n  const selectedState = (value) => {\r\n    setUStates(value.value);\r\n  };\r\n  const schemes = (value) => {\r\n    setSchemes(value.value);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Sender Information\" disableWidgetMenu>\r\n            <div className={classes.PaymentBar}>\r\n              <Paper className={classes.layout}>\r\n                <Grid className={classes.paper} container spacing={2}>\r\n                  <Grid item xs={12} sm={12}>\r\n                    <Card\r\n                      cvc={cvc}\r\n                      number={number}\r\n                      expiry={expiry}\r\n                      name={name}\r\n                      focus={focus}\r\n                      preview=\"true\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"First Name\"\r\n                      name=\"firstname\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      onFocus={(e) => setFocus(e.target.name)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Second Name \"\r\n                      name=\"city\"\r\n                      variant=\"outlined\"\r\n                      onChange={(e) => setSecondNmae(e.target.value)}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      type=\"tel\"\r\n                      label=\"Card Number\"\r\n                      value={number}\r\n                      name=\"lastName\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      onChange={(e) => setNumber(e.target.value)}\r\n                      onFocus={(e) => setFocus(e.target.name)}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      label=\"Card Expiry Date\"\r\n                      placeholder=\"mm/yy\"\r\n                      name=\"date\"\r\n                      // type=\"date\"\r\n                      defaultValue=\"2021-12\"\r\n                      margin=\"normal\"\r\n                      value={expiry}\r\n                      onChange={(e) => setExpiry(e.target.value)}\r\n                      onFocus={(e) => setFocus(e.target.name)}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Cvc\"\r\n                      name=\"lastName\"\r\n                      variant=\"outlined\"\r\n                      value={cvc}\r\n                      onChange={(e) => setCvc(e.target.value)}\r\n                      onFocus={(e) => setFocus(e.target.name)}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <Select\r\n                      label=\"Country\"\r\n                      placeholder=\"Country\"\r\n                      options={countryCode}\r\n                      onChange={selectState}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <Select\r\n                      fullWidth\r\n                      placeholder=\"State\"\r\n                      label=\" select States\"\r\n                      options={unitedstates}\r\n                      onChange={selectedState}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\" phone number \"\r\n                      placeholder={\"+\" + phonePrefix}\r\n                      variant=\"outlined\"\r\n                      onChage={(e) => setPhonePrefix(e.target.value)}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Email Addreess \"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      onchange={(e) => setEmail1(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Address 1 \"\r\n                      name=\"city\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      onchange={(e) => setAddress1(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Address 2 \"\r\n                      name=\"city\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      onchange={(e) => setAddress2(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <Select\r\n                      fullWidth\r\n                      placeholder=\"Currency Pair\"\r\n                      options={storePair}\r\n                      onChange={currencyRate}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label={\"Enter Amount in \" + currencyLabel}\r\n                      name=\"lastName\"\r\n                      variant=\"outlined\"\r\n                      onChange={(e) => converter(e.target.value)}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label={\"Amount converted to\" + currencyLabel1}\r\n                      name=\"lastName\"\r\n                      variant=\"outlined\"\r\n                      value={afterExchage * 109.1}\r\n                      onChange={(e) => setAmount(e.target.value)}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Beneficiary Details\" disableWidgetMenu>\r\n            <div className={classes.PaymentBar}>\r\n              <Paper className={classes.layout}>\r\n                <Grid className={classes.paper} container spacing={2}>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Beneficiary firstName \"\r\n                      name=\"city\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      onChange={(e) => setBfirstName(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Beneficiary SecondName \"\r\n                      name=\"city\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      onChange={(e) => setBsecondname(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Email Address \"\r\n                      name=\"city\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      onChange={(e) => setEmail2(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <Select\r\n                      label=\"Country\"\r\n                      placeholder=\"Country\"\r\n                      options={countryCode}\r\n                      onChange={selectState}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Beneficiary phone number \"\r\n                      value={\"+\" + phonePrefix}\r\n                      variant=\"outlined\"\r\n                      onChage={(e) => setPhonePrefix(e.target.value)}\r\n                      margin=\"normal\"\r\n                    >\r\n                      <Select />\r\n                    </TextField>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <Select\r\n                      fullWidth\r\n                      placeholder=\"State\"\r\n                      label=\" select States\"\r\n                      options={unitedstates}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <Select\r\n                      options={client}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Client\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6}>\r\n                    <Select\r\n                      options={options}\r\n                      onChange={fetchSchemes}\r\n                      placeholder=\"Schemes\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6} sm={6}>\r\n                    <Select\r\n                      options={finalOption}\r\n                      placeholder=\"Details\"\r\n                      onChange={schemes}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Brief Description\"\r\n                      name=\"lastName\"\r\n                      variant=\"outlined\"\r\n                      onChange={(e) => setDescription(e.target.value)}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <div>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={showScheduled}\r\n                        onChange={scheduled}\r\n                      />\r\n\r\n                      <span>schedule payment</span>\r\n                      {showScheduled && (\r\n                        <Grid item xs={6} sm={12}>\r\n                          <TextField\r\n                            fullWidth\r\n                            label=\" \"\r\n                            type=\"date\"\r\n                            name=\"city\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                          />\r\n                          <input type=\"checkbox\" /> <span>every month</span>\r\n                        </Grid>\r\n                      )}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={6} sm={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Paper>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\notifications\\Notifications.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Sidebar\\Sidebar.js",["309","310","311"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const userp = [\r\n    { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n    {\r\n      id: 1,\r\n      label: \"Send Money\",\r\n      link: \"/app/typography\",\r\n      icon: <TypographyIcon />,\r\n    },\r\n    {\r\n      id: 2,\r\n      label: \"Transaction Details\",\r\n      link: \"/app/tables\",\r\n      icon: <TableIcon />,\r\n    },\r\n    {\r\n      id: 3,\r\n      label: \"Quick send\",\r\n      link: \"/app/notifications\",\r\n      icon: <NotificationsIcon />,\r\n    },\r\n  ];\r\n\r\n  const Admin = [\r\n    { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n    {\r\n      id: 4,\r\n      label: \"Admin\",\r\n      link: \"/app/ui\",\r\n      icon: <UIElementsIcon />,\r\n      children: [\r\n        { label: \"view Transactions\", link: \"/app/ui/icons\" },\r\n        { label: \"Add client\", link: \"/app/ui/charts\" },\r\n        { label: \"register user\", link: \"/app/ui/maps\" },\r\n      ],\r\n    },\r\n    { id: 5, type: \"divider\" },\r\n    { id: 6, type: \"title\", label: \"HELP\" },\r\n\r\n    {\r\n      id: 8,\r\n      label: \"Support\",\r\n      link: \"https://flatlogic.com/forum\",\r\n      icon: <SupportIcon />,\r\n    },\r\n    {\r\n      id: 9,\r\n      label: \"FAQ\",\r\n      link: \"https://flatlogic.com/forum\",\r\n      icon: <FAQIcon />,\r\n    },\r\n    { id: 10, type: \"divider\" },\r\n    {\r\n      id: 9,\r\n      label: \"Settings\",\r\n      link: \"https://flatlogic.com/forum\",\r\n      icon: <FAQIcon />,\r\n    },\r\n  ];\r\n  if (user.data.roles.role === \"ADMIN\") {\r\n    return Admin;\r\n  } else if (user.data.roles.role === \"USER\") {\r\n    return userp;\r\n  }\r\n};\r\n\r\nconst tructure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Send Money\",\r\n    link: \"/app/typography\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"Transaction Details\",\r\n    link: \"/app/tables\",\r\n    icon: <TableIcon />,\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"Quick send\",\r\n    link: \"/app/notifications\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Admin\",\r\n    link: \"/app/ui\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"view Transactions\", link: \"/app/ui/icons\" },\r\n      { label: \"Add client\", link: \"/app/ui/charts\" },\r\n      { label: \"register user\", link: \"/app/ui/maps\" },\r\n    ],\r\n  },\r\n  { id: 5, type: \"divider\" },\r\n  { id: 6, type: \"title\", label: \"HELP\" },\r\n\r\n  {\r\n    id: 8,\r\n    label: \"Support\",\r\n    link: \"https://flatlogic.com/forum\",\r\n    icon: <SupportIcon />,\r\n  },\r\n  {\r\n    id: 9,\r\n    label: \"FAQ\",\r\n    link: \"https://flatlogic.com/forum\",\r\n    icon: <FAQIcon />,\r\n  },\r\n  { id: 10, type: \"divider\" },\r\n  {\r\n    id: 9,\r\n    label: \"Settings\",\r\n    link: \"https://flatlogic.com/forum\",\r\n    icon: <FAQIcon />,\r\n  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure().map((link) => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","D:\\private\\school\\themez\\react-material-admin\\src\\components\\Header\\Header.js",["312","313"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h3\" weight=\"medium\" className={classes.logotype}>\r\n          Qsend System\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={(e) => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={(e) => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={(e) => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map((message) => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map((notification) => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              Dennis Karanja\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              lanstar\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\mock.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Header\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Sidebar\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Notification\\Notification.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\UserAvatar\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\Notification\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\typography\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\notifications\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\maps\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\icons\\styles.js",[],["314","315"],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\services\\auth.service.js",["316"],"import axios from \"axios\";\r\n\r\nconst API_URL = \"/api/qsend/v1\";\r\n\r\nconst register = (username, email, password) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    username,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"/auth/token\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.headerValue) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n      console.log(response.data);\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","D:\\private\\school\\themez\\react-material-admin\\src\\services\\user.service.js",["317"],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"/api/qsend/v1\";\r\n\r\nconst getPublicContent = () => {\r\n  return axios.get(API_URL + \"all\");\r\n};\r\n\r\nconst getUserBoard = () => {\r\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\r\n};\r\n\r\nconst getModeratorBoard = () => {\r\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\r\n};\r\n\r\nconst getAdminBoard = () => {\r\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n};\r\n\r\nconst payment = () => {\r\n  return axios.get(API_URL + \"/transactions\", { headers: authHeader() });\r\n};\r\n\r\nconst client = () => {\r\n  return axios.get(API_URL + \"/clients\", { headers: authHeader() });\r\n};\r\n\r\nconst schemes = (id) => {\r\n  return axios.get(API_URL + \"/clients/schemes/\" + id, {\r\n    headers: authHeader(),\r\n  });\r\n};\r\n\r\nconst loans = (id) => {\r\n  console.log(id);\r\n  console.log(API_URL + \"/clients/loanTypes\" + id);\r\n  return axios.get(API_URL + \"/clients/loanTypes/\" + id, {\r\n    headers: authHeader(),\r\n  });\r\n};\r\n\r\nconst states = (code) => {\r\n  return axios.get(API_URL + \"/country/\" + code + \"/states\", {\r\n    headers: authHeader(),\r\n  });\r\n};\r\n\r\nconst country = () => {\r\n  return axios.get(API_URL + \"/country\", { headers: authHeader() });\r\n};\r\n\r\nconst currencyPair = () => {\r\n  return axios.get(API_URL + \"/currency/pair\", { headers: authHeader() });\r\n};\r\nconst exchangeRate = () => {\r\n  return axios.get(API_URL + \"/currency/rates\", { headers: authHeader() });\r\n};\r\nexport default {\r\n  getPublicContent,\r\n  getUserBoard,\r\n  getModeratorBoard,\r\n  getAdminBoard,\r\n  payment,\r\n  client,\r\n  loans,\r\n  schemes,\r\n  states,\r\n  country,\r\n  currencyPair,\r\n  exchangeRate,\r\n};\r\n","D:\\private\\school\\themez\\react-material-admin\\src\\services\\auth-header.js",[],"D:\\private\\school\\themez\\react-material-admin\\src\\components\\controls\\FormControls.jsx",[],{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":94,"column":40,"nodeType":"324","messageId":"325","endLine":94,"endColumn":42},{"ruleId":"326","severity":1,"message":"327","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":18},{"ruleId":"326","severity":1,"message":"330","line":4,"column":8,"nodeType":"328","messageId":"329","endLine":4,"endColumn":12},{"ruleId":"326","severity":1,"message":"331","line":10,"column":8,"nodeType":"328","messageId":"329","endLine":10,"endColumn":19},{"ruleId":"326","severity":1,"message":"332","line":14,"column":8,"nodeType":"328","messageId":"329","endLine":14,"endColumn":17},{"ruleId":"326","severity":1,"message":"333","line":16,"column":10,"nodeType":"328","messageId":"329","endLine":16,"endColumn":20},{"ruleId":"326","severity":1,"message":"334","line":20,"column":8,"nodeType":"328","messageId":"329","endLine":20,"endColumn":18},{"ruleId":"326","severity":1,"message":"335","line":22,"column":10,"nodeType":"328","messageId":"329","endLine":22,"endColumn":30},{"ruleId":"326","severity":1,"message":"336","line":26,"column":10,"nodeType":"328","messageId":"329","endLine":26,"endColumn":16},{"ruleId":"326","severity":1,"message":"337","line":28,"column":10,"nodeType":"328","messageId":"329","endLine":28,"endColumn":21},{"ruleId":"326","severity":1,"message":"338","line":29,"column":10,"nodeType":"328","messageId":"329","endLine":29,"endColumn":15},{"ruleId":"326","severity":1,"message":"339","line":29,"column":17,"nodeType":"328","messageId":"329","endLine":29,"endColumn":25},{"ruleId":"326","severity":1,"message":"340","line":32,"column":10,"nodeType":"328","messageId":"329","endLine":32,"endColumn":19},{"ruleId":"326","severity":1,"message":"341","line":33,"column":10,"nodeType":"328","messageId":"329","endLine":33,"endColumn":22},{"ruleId":"326","severity":1,"message":"342","line":34,"column":10,"nodeType":"328","messageId":"329","endLine":34,"endColumn":21},{"ruleId":"326","severity":1,"message":"343","line":35,"column":10,"nodeType":"328","messageId":"329","endLine":35,"endColumn":23},{"ruleId":"326","severity":1,"message":"344","line":36,"column":10,"nodeType":"328","messageId":"329","endLine":36,"endColumn":24},{"ruleId":"326","severity":1,"message":"345","line":40,"column":10,"nodeType":"328","messageId":"329","endLine":40,"endColumn":16},{"ruleId":"326","severity":1,"message":"346","line":41,"column":10,"nodeType":"328","messageId":"329","endLine":41,"endColumn":16},{"ruleId":"326","severity":1,"message":"347","line":41,"column":18,"nodeType":"328","messageId":"329","endLine":41,"endColumn":27},{"ruleId":"326","severity":1,"message":"348","line":42,"column":10,"nodeType":"328","messageId":"329","endLine":42,"endColumn":18},{"ruleId":"326","severity":1,"message":"349","line":43,"column":10,"nodeType":"328","messageId":"329","endLine":43,"endColumn":17},{"ruleId":"326","severity":1,"message":"350","line":44,"column":18,"nodeType":"328","messageId":"329","endLine":44,"endColumn":27},{"ruleId":"326","severity":1,"message":"351","line":45,"column":10,"nodeType":"328","messageId":"329","endLine":45,"endColumn":20},{"ruleId":"326","severity":1,"message":"352","line":45,"column":22,"nodeType":"328","messageId":"329","endLine":45,"endColumn":35},{"ruleId":"326","severity":1,"message":"353","line":46,"column":10,"nodeType":"328","messageId":"329","endLine":46,"endColumn":21},{"ruleId":"326","severity":1,"message":"354","line":46,"column":23,"nodeType":"328","messageId":"329","endLine":46,"endColumn":37},{"ruleId":"326","severity":1,"message":"355","line":47,"column":10,"nodeType":"328","messageId":"329","endLine":47,"endColumn":21},{"ruleId":"326","severity":1,"message":"356","line":47,"column":23,"nodeType":"328","messageId":"329","endLine":47,"endColumn":37},{"ruleId":"326","severity":1,"message":"357","line":48,"column":10,"nodeType":"328","messageId":"329","endLine":48,"endColumn":30},{"ruleId":"326","severity":1,"message":"358","line":51,"column":10,"nodeType":"328","messageId":"329","endLine":51,"endColumn":18},{"ruleId":"326","severity":1,"message":"359","line":52,"column":10,"nodeType":"328","messageId":"329","endLine":52,"endColumn":17},{"ruleId":"326","severity":1,"message":"360","line":53,"column":10,"nodeType":"328","messageId":"329","endLine":53,"endColumn":17},{"ruleId":"326","severity":1,"message":"361","line":54,"column":10,"nodeType":"328","messageId":"329","endLine":54,"endColumn":22},{"ruleId":"326","severity":1,"message":"362","line":55,"column":10,"nodeType":"328","messageId":"329","endLine":55,"endColumn":19},{"ruleId":"326","severity":1,"message":"363","line":56,"column":10,"nodeType":"328","messageId":"329","endLine":56,"endColumn":18},{"ruleId":"326","severity":1,"message":"364","line":78,"column":10,"nodeType":"328","messageId":"329","endLine":78,"endColumn":13},{"ruleId":"326","severity":1,"message":"365","line":78,"column":15,"nodeType":"328","messageId":"329","endLine":78,"endColumn":21},{"ruleId":"326","severity":1,"message":"366","line":79,"column":10,"nodeType":"328","messageId":"329","endLine":79,"endColumn":16},{"ruleId":"326","severity":1,"message":"367","line":79,"column":18,"nodeType":"328","messageId":"329","endLine":79,"endColumn":27},{"ruleId":"326","severity":1,"message":"368","line":81,"column":10,"nodeType":"328","messageId":"329","endLine":81,"endColumn":16},{"ruleId":"326","severity":1,"message":"369","line":81,"column":18,"nodeType":"328","messageId":"329","endLine":81,"endColumn":27},{"ruleId":"326","severity":1,"message":"370","line":82,"column":10,"nodeType":"328","messageId":"329","endLine":82,"endColumn":15},{"ruleId":"326","severity":1,"message":"371","line":83,"column":10,"nodeType":"328","messageId":"329","endLine":83,"endColumn":20},{"ruleId":"326","severity":1,"message":"372","line":85,"column":9,"nodeType":"328","messageId":"329","endLine":85,"endColumn":16},{"ruleId":"326","severity":1,"message":"373","line":91,"column":9,"nodeType":"328","messageId":"329","endLine":91,"endColumn":21},{"ruleId":"326","severity":1,"message":"374","line":95,"column":9,"nodeType":"328","messageId":"329","endLine":95,"endColumn":21},{"ruleId":"375","severity":1,"message":"376","line":98,"column":21,"nodeType":"377","messageId":"378","endLine":98,"endColumn":23},{"ruleId":"375","severity":1,"message":"376","line":108,"column":28,"nodeType":"377","messageId":"378","endLine":108,"endColumn":30},{"ruleId":"326","severity":1,"message":"379","line":161,"column":9,"nodeType":"328","messageId":"329","endLine":161,"endColumn":21},{"ruleId":"326","severity":1,"message":"380","line":173,"column":9,"nodeType":"328","messageId":"329","endLine":173,"endColumn":17},{"ruleId":"326","severity":1,"message":"381","line":219,"column":9,"nodeType":"328","messageId":"329","endLine":219,"endColumn":18},{"ruleId":"326","severity":1,"message":"382","line":223,"column":9,"nodeType":"328","messageId":"329","endLine":223,"endColumn":18},{"ruleId":"326","severity":1,"message":"383","line":231,"column":9,"nodeType":"328","messageId":"329","endLine":231,"endColumn":16},{"ruleId":"326","severity":1,"message":"384","line":4,"column":3,"nodeType":"328","messageId":"329","endLine":4,"endColumn":17},{"ruleId":"326","severity":1,"message":"385","line":5,"column":3,"nodeType":"328","messageId":"329","endLine":5,"endColumn":9},{"ruleId":"326","severity":1,"message":"386","line":6,"column":3,"nodeType":"328","messageId":"329","endLine":6,"endColumn":16},{"ruleId":"326","severity":1,"message":"387","line":7,"column":3,"nodeType":"328","messageId":"329","endLine":7,"endColumn":11},{"ruleId":"326","severity":1,"message":"388","line":12,"column":3,"nodeType":"328","messageId":"329","endLine":12,"endColumn":22},{"ruleId":"326","severity":1,"message":"389","line":13,"column":3,"nodeType":"328","messageId":"329","endLine":13,"endColumn":16},{"ruleId":"326","severity":1,"message":"390","line":14,"column":3,"nodeType":"328","messageId":"329","endLine":14,"endColumn":12},{"ruleId":"326","severity":1,"message":"391","line":15,"column":3,"nodeType":"328","messageId":"329","endLine":15,"endColumn":12},{"ruleId":"326","severity":1,"message":"392","line":16,"column":3,"nodeType":"328","messageId":"329","endLine":16,"endColumn":7},{"ruleId":"326","severity":1,"message":"393","line":17,"column":3,"nodeType":"328","messageId":"329","endLine":17,"endColumn":7},{"ruleId":"326","severity":1,"message":"394","line":18,"column":3,"nodeType":"328","messageId":"329","endLine":18,"endColumn":11},{"ruleId":"326","severity":1,"message":"395","line":19,"column":3,"nodeType":"328","messageId":"329","endLine":19,"endColumn":6},{"ruleId":"326","severity":1,"message":"396","line":20,"column":3,"nodeType":"328","messageId":"329","endLine":20,"endColumn":7},{"ruleId":"326","severity":1,"message":"397","line":21,"column":3,"nodeType":"328","messageId":"329","endLine":21,"endColumn":8},{"ruleId":"326","severity":1,"message":"398","line":22,"column":3,"nodeType":"328","messageId":"329","endLine":22,"endColumn":8},{"ruleId":"326","severity":1,"message":"333","line":32,"column":10,"nodeType":"328","messageId":"329","endLine":32,"endColumn":20},{"ruleId":"326","severity":1,"message":"399","line":33,"column":8,"nodeType":"328","messageId":"329","endLine":33,"endColumn":11},{"ruleId":"326","severity":1,"message":"400","line":37,"column":7,"nodeType":"328","messageId":"329","endLine":37,"endColumn":20},{"ruleId":"326","severity":1,"message":"401","line":38,"column":7,"nodeType":"328","messageId":"329","endLine":38,"endColumn":19},{"ruleId":"326","severity":1,"message":"402","line":47,"column":7,"nodeType":"328","messageId":"329","endLine":47,"endColumn":12},{"ruleId":"326","severity":1,"message":"403","line":50,"column":8,"nodeType":"328","messageId":"329","endLine":50,"endColumn":22},{"ruleId":"326","severity":1,"message":"404","line":50,"column":24,"nodeType":"328","messageId":"329","endLine":50,"endColumn":41},{"ruleId":"326","severity":1,"message":"327","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":18},{"ruleId":"326","severity":1,"message":"331","line":10,"column":8,"nodeType":"328","messageId":"329","endLine":10,"endColumn":19},{"ruleId":"326","severity":1,"message":"332","line":14,"column":8,"nodeType":"328","messageId":"329","endLine":14,"endColumn":17},{"ruleId":"326","severity":1,"message":"333","line":16,"column":10,"nodeType":"328","messageId":"329","endLine":16,"endColumn":20},{"ruleId":"326","severity":1,"message":"334","line":20,"column":8,"nodeType":"328","messageId":"329","endLine":20,"endColumn":18},{"ruleId":"326","severity":1,"message":"335","line":22,"column":10,"nodeType":"328","messageId":"329","endLine":22,"endColumn":30},{"ruleId":"326","severity":1,"message":"338","line":29,"column":10,"nodeType":"328","messageId":"329","endLine":29,"endColumn":15},{"ruleId":"326","severity":1,"message":"339","line":29,"column":17,"nodeType":"328","messageId":"329","endLine":29,"endColumn":25},{"ruleId":"326","severity":1,"message":"346","line":41,"column":10,"nodeType":"328","messageId":"329","endLine":41,"endColumn":16},{"ruleId":"326","severity":1,"message":"348","line":42,"column":10,"nodeType":"328","messageId":"329","endLine":42,"endColumn":18},{"ruleId":"326","severity":1,"message":"349","line":43,"column":10,"nodeType":"328","messageId":"329","endLine":43,"endColumn":17},{"ruleId":"326","severity":1,"message":"363","line":56,"column":10,"nodeType":"328","messageId":"329","endLine":56,"endColumn":18},{"ruleId":"375","severity":1,"message":"376","line":98,"column":21,"nodeType":"377","messageId":"378","endLine":98,"endColumn":23},{"ruleId":"375","severity":1,"message":"376","line":108,"column":28,"nodeType":"377","messageId":"378","endLine":108,"endColumn":30},{"ruleId":"326","severity":1,"message":"380","line":173,"column":9,"nodeType":"328","messageId":"329","endLine":173,"endColumn":17},{"ruleId":"326","severity":1,"message":"405","line":10,"column":19,"nodeType":"328","messageId":"329","endLine":10,"endColumn":30},{"ruleId":"326","severity":1,"message":"399","line":23,"column":8,"nodeType":"328","messageId":"329","endLine":23,"endColumn":11},{"ruleId":"326","severity":1,"message":"406","line":99,"column":7,"nodeType":"328","messageId":"329","endLine":99,"endColumn":15},{"ruleId":"326","severity":1,"message":"407","line":10,"column":3,"nodeType":"328","messageId":"329","endLine":10,"endColumn":7},{"ruleId":"326","severity":1,"message":"408","line":27,"column":29,"nodeType":"328","messageId":"329","endLine":27,"endColumn":35},{"ruleId":"318","replacedBy":"409"},{"ruleId":"320","replacedBy":"410"},{"ruleId":"411","severity":1,"message":"412","line":36,"column":1,"nodeType":"413","endLine":41,"endColumn":3},{"ruleId":"411","severity":1,"message":"412","line":60,"column":1,"nodeType":"413","endLine":73,"endColumn":3},"no-native-reassign",["414"],"no-negated-in-lhs",["415"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'FormControl' is defined but never used.","'PageTitle' is defined but never used.","'Typography' is defined but never used.","'PhoneInput' is defined but never used.","'mdiVideoMinusOutline' is defined but never used.","'client' is assigned a value but never used.","'finalOption' is assigned a value but never used.","'phone' is assigned a value but never used.","'setPhone' is assigned a value but never used.","'storePair' is assigned a value but never used.","'afterExchage' is assigned a value but never used.","'phonePrefix' is assigned a value but never used.","'currencyLabel' is assigned a value but never used.","'currencyLabel1' is assigned a value but never used.","'email1' is assigned a value but never used.","'email2' is assigned a value but never used.","'setEmail2' is assigned a value but never used.","'address1' is assigned a value but never used.","'adress2' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'bFirstname' is assigned a value but never used.","'setBfirstName' is assigned a value but never used.","'bSecondName' is assigned a value but never used.","'setBsecondname' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'ftransactionTypeCode' is assigned a value but never used.","'schemess' is assigned a value but never used.","'ustates' is assigned a value but never used.","'country' is assigned a value but never used.","'currencyPair' is assigned a value but never used.","'converted' is assigned a value but never used.","'country2' is assigned a value but never used.","'cvc' is assigned a value but never used.","'setCvc' is assigned a value but never used.","'number' is assigned a value but never used.","'setNumber' is assigned a value but never used.","'expiry' is assigned a value but never used.","'setExpiry' is assigned a value but never used.","'focus' is assigned a value but never used.","'secondName' is assigned a value but never used.","'options' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'fetchSchemes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'currencyRate' is assigned a value but never used.","'exchange' is assigned a value but never used.","'scheduled' is assigned a value but never used.","'converter' is assigned a value but never used.","'schemes' is assigned a value but never used.","'LinearProgress' is defined but never used.","'Select' is defined but never used.","'OutlinedInput' is defined but never used.","'MenuItem' is defined but never used.","'ResponsiveContainer' is defined but never used.","'ComposedChart' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Area' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'YAxis' is defined but never used.","'XAxis' is defined but never used.","'Dot' is defined but never used.","'mainChartData' is assigned a value but never used.","'PieChartData' is assigned a value but never used.","'theme' is assigned a value but never used.","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.","'LibraryIcon' is defined but never used.","'tructure' is assigned a value but never used.","'Link' is defined but never used.","'Button' is defined but never used.",["414"],["415"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]